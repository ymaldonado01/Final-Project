ARM GAS  C:\Users\Shahed\AppData\Local\Temp\cc22cuHL.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"ADC.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	ADC_initVar
  18              		.bss
  19              		.type	ADC_initVar, %object
  20              		.size	ADC_initVar, 1
  21              	ADC_initVar:
  22 0000 00       		.space	1
  23              		.comm	ADC_offset,2,4
  24              		.comm	ADC_countsPer10Volt,4,4
  25              		.section	.rodata
  26              		.align	2
  27              		.type	ADC_channelsConfig, %object
  28              		.size	ADC_channelsConfig, 4
  29              	ADC_channelsConfig:
  30 0000 00050000 		.word	1280
  31              		.section	.text.ADC_Start,"ax",%progbits
  32              		.align	2
  33              		.global	ADC_Start
  34              		.code	16
  35              		.thumb_func
  36              		.type	ADC_Start, %function
  37              	ADC_Start:
  38              	.LFB2:
  39              		.file 1 ".\\Generated_Source\\PSoC4\\ADC.c"
   1:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/ADC.c **** * File Name: ADC.c
   3:.\Generated_Source\PSoC4/ADC.c **** * Version 2.10
   4:.\Generated_Source\PSoC4/ADC.c **** *
   5:.\Generated_Source\PSoC4/ADC.c **** * Description:
   6:.\Generated_Source\PSoC4/ADC.c **** *  This file provides the source code to the API for the Sequencing Successive
   7:.\Generated_Source\PSoC4/ADC.c **** *  Approximation ADC Component Component.
   8:.\Generated_Source\PSoC4/ADC.c **** *
   9:.\Generated_Source\PSoC4/ADC.c **** * Note:
  10:.\Generated_Source\PSoC4/ADC.c **** *
  11:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
  12:.\Generated_Source\PSoC4/ADC.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC4/ADC.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC4/ADC.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC4/ADC.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC4/ADC.c **** 
  18:.\Generated_Source\PSoC4/ADC.c **** #include "ADC.h"
ARM GAS  C:\Users\Shahed\AppData\Local\Temp\cc22cuHL.s 			page 2


  19:.\Generated_Source\PSoC4/ADC.c **** 
  20:.\Generated_Source\PSoC4/ADC.c **** 
  21:.\Generated_Source\PSoC4/ADC.c **** /***************************************
  22:.\Generated_Source\PSoC4/ADC.c **** * Global data allocation
  23:.\Generated_Source\PSoC4/ADC.c **** ***************************************/
  24:.\Generated_Source\PSoC4/ADC.c **** uint8 ADC_initVar = 0u;
  25:.\Generated_Source\PSoC4/ADC.c **** volatile int16 ADC_offset[ADC_TOTAL_CHANNELS_NUM];
  26:.\Generated_Source\PSoC4/ADC.c **** volatile int32 ADC_countsPer10Volt[ADC_TOTAL_CHANNELS_NUM];   /* Gain compensation */
  27:.\Generated_Source\PSoC4/ADC.c **** 
  28:.\Generated_Source\PSoC4/ADC.c **** 
  29:.\Generated_Source\PSoC4/ADC.c **** /***************************************
  30:.\Generated_Source\PSoC4/ADC.c **** * Local data allocation
  31:.\Generated_Source\PSoC4/ADC.c **** ***************************************/
  32:.\Generated_Source\PSoC4/ADC.c **** /* Channels configuration generated by customiser */
  33:.\Generated_Source\PSoC4/ADC.c **** static const uint32 CYCODE ADC_channelsConfig[] = { 0x00000500u };
  34:.\Generated_Source\PSoC4/ADC.c **** 
  35:.\Generated_Source\PSoC4/ADC.c **** 
  36:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
  37:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Start
  38:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
  39:.\Generated_Source\PSoC4/ADC.c **** *
  40:.\Generated_Source\PSoC4/ADC.c **** * Summary:
  41:.\Generated_Source\PSoC4/ADC.c **** *  Performs all required initialization for this component
  42:.\Generated_Source\PSoC4/ADC.c **** *  and enables the power. The power will be set to the appropriate
  43:.\Generated_Source\PSoC4/ADC.c **** *  power based on the clock frequency.
  44:.\Generated_Source\PSoC4/ADC.c **** *
  45:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
  46:.\Generated_Source\PSoC4/ADC.c **** *  None.
  47:.\Generated_Source\PSoC4/ADC.c **** *
  48:.\Generated_Source\PSoC4/ADC.c **** * Return:
  49:.\Generated_Source\PSoC4/ADC.c **** *  None.
  50:.\Generated_Source\PSoC4/ADC.c **** *
  51:.\Generated_Source\PSoC4/ADC.c **** * Global variables:
  52:.\Generated_Source\PSoC4/ADC.c **** *  The ADC_initVar variable is used to indicate when/if initial
  53:.\Generated_Source\PSoC4/ADC.c **** *  configuration of this component has happened. The variable is initialized to
  54:.\Generated_Source\PSoC4/ADC.c **** *  zero and set to 1 the first time ADC_Start() is called. This allows for
  55:.\Generated_Source\PSoC4/ADC.c **** *  component Re-Start without re-initialization in all subsequent calls to the
  56:.\Generated_Source\PSoC4/ADC.c **** *  ADC_Start() routine.
  57:.\Generated_Source\PSoC4/ADC.c **** *  If re-initialization of the component is required the variable should be set
  58:.\Generated_Source\PSoC4/ADC.c **** *  to zero before call of ADC_Start() routine, or the user may call
  59:.\Generated_Source\PSoC4/ADC.c **** *  ADC_Init() and ADC_Enable() as done in the
  60:.\Generated_Source\PSoC4/ADC.c **** *  ADC_Start() routine.
  61:.\Generated_Source\PSoC4/ADC.c **** *
  62:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
  63:.\Generated_Source\PSoC4/ADC.c **** void ADC_Start(void)
  64:.\Generated_Source\PSoC4/ADC.c **** {
  40              		.loc 1 64 0
  41              		.cfi_startproc
  42 0000 80B5     		push	{r7, lr}
  43              		.cfi_def_cfa_offset 8
  44              		.cfi_offset 7, -8
  45              		.cfi_offset 14, -4
  46 0002 00AF     		add	r7, sp, #0
  47              		.cfi_def_cfa_register 7
  65:.\Generated_Source\PSoC4/ADC.c ****     /* If not Initialized then initialize all required hardware and software */
  66:.\Generated_Source\PSoC4/ADC.c ****     if(ADC_initVar == 0u)
  48              		.loc 1 66 0
ARM GAS  C:\Users\Shahed\AppData\Local\Temp\cc22cuHL.s 			page 3


  49 0004 064B     		ldr	r3, .L3
  50 0006 1B78     		ldrb	r3, [r3]
  51 0008 002B     		cmp	r3, #0
  52 000a 04D1     		bne	.L2
  67:.\Generated_Source\PSoC4/ADC.c ****     {
  68:.\Generated_Source\PSoC4/ADC.c ****         ADC_Init();
  53              		.loc 1 68 0
  54 000c FFF7FEFF 		bl	ADC_Init
  69:.\Generated_Source\PSoC4/ADC.c ****         ADC_initVar = 1u;
  55              		.loc 1 69 0
  56 0010 034B     		ldr	r3, .L3
  57 0012 0122     		mov	r2, #1
  58 0014 1A70     		strb	r2, [r3]
  59              	.L2:
  70:.\Generated_Source\PSoC4/ADC.c ****     }
  71:.\Generated_Source\PSoC4/ADC.c ****     ADC_Enable();
  60              		.loc 1 71 0
  61 0016 FFF7FEFF 		bl	ADC_Enable
  72:.\Generated_Source\PSoC4/ADC.c **** }
  62              		.loc 1 72 0
  63 001a BD46     		mov	sp, r7
  64              		@ sp needed
  65 001c 80BD     		pop	{r7, pc}
  66              	.L4:
  67 001e C046     		.align	2
  68              	.L3:
  69 0020 00000000 		.word	ADC_initVar
  70              		.cfi_endproc
  71              	.LFE2:
  72              		.size	ADC_Start, .-ADC_Start
  73              		.global	__aeabi_idiv
  74              		.section	.text.ADC_Init,"ax",%progbits
  75              		.align	2
  76              		.global	ADC_Init
  77              		.code	16
  78              		.thumb_func
  79              		.type	ADC_Init, %function
  80              	ADC_Init:
  81              	.LFB3:
  73:.\Generated_Source\PSoC4/ADC.c **** 
  74:.\Generated_Source\PSoC4/ADC.c **** 
  75:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
  76:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Init
  77:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
  78:.\Generated_Source\PSoC4/ADC.c **** *
  79:.\Generated_Source\PSoC4/ADC.c **** * Summary:
  80:.\Generated_Source\PSoC4/ADC.c **** *  Initialize component's parameters to the parameters set by user in the
  81:.\Generated_Source\PSoC4/ADC.c **** *  customizer of the component placed onto schematic. Usually called in
  82:.\Generated_Source\PSoC4/ADC.c **** *  ADC_Start().
  83:.\Generated_Source\PSoC4/ADC.c **** *
  84:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
  85:.\Generated_Source\PSoC4/ADC.c **** *  None.
  86:.\Generated_Source\PSoC4/ADC.c **** *
  87:.\Generated_Source\PSoC4/ADC.c **** * Return:
  88:.\Generated_Source\PSoC4/ADC.c **** *  None.
  89:.\Generated_Source\PSoC4/ADC.c **** *
  90:.\Generated_Source\PSoC4/ADC.c **** * Global variables:
ARM GAS  C:\Users\Shahed\AppData\Local\Temp\cc22cuHL.s 			page 4


  91:.\Generated_Source\PSoC4/ADC.c **** *  The ADC_offset variable is initialized.
  92:.\Generated_Source\PSoC4/ADC.c **** *
  93:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
  94:.\Generated_Source\PSoC4/ADC.c **** void ADC_Init(void)
  95:.\Generated_Source\PSoC4/ADC.c **** {
  82              		.loc 1 95 0
  83              		.cfi_startproc
  84 0000 90B5     		push	{r4, r7, lr}
  85              		.cfi_def_cfa_offset 12
  86              		.cfi_offset 4, -12
  87              		.cfi_offset 7, -8
  88              		.cfi_offset 14, -4
  89 0002 85B0     		sub	sp, sp, #20
  90              		.cfi_def_cfa_offset 32
  91 0004 00AF     		add	r7, sp, #0
  92              		.cfi_def_cfa_register 7
  96:.\Generated_Source\PSoC4/ADC.c ****     uint32 chNum;
  97:.\Generated_Source\PSoC4/ADC.c ****     uint32 tmpRegVal;
  98:.\Generated_Source\PSoC4/ADC.c ****     int32 counts;
  99:.\Generated_Source\PSoC4/ADC.c **** 
 100:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_TOTAL_CHANNELS_NUM > 1u)
 101:.\Generated_Source\PSoC4/ADC.c ****         static const uint8 CYCODE ADC_InputsPlacement[] =
 102:.\Generated_Source\PSoC4/ADC.c ****         {
 103:.\Generated_Source\PSoC4/ADC.c ****             (uint8)(ADC_cy_psoc4_sarmux_8__CH_0_PORT << 4u) |
 104:.\Generated_Source\PSoC4/ADC.c ****             (uint8)ADC_cy_psoc4_sarmux_8__CH_0_PIN
 105:.\Generated_Source\PSoC4/ADC.c ****             ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_1_PORT << 4u) |
 106:.\Generated_Source\PSoC4/ADC.c ****              (uint8)ADC_cy_psoc4_sarmux_8__CH_1_PIN
 107:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 2u)
 108:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_2_PORT << 4u) |
 109:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_2_PIN
 110:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 2u */
 111:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 3u)
 112:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_3_PORT << 4u) |
 113:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_3_PIN
 114:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 3u */
 115:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 4u)
 116:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_4_PORT << 4u) |
 117:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_4_PIN
 118:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 4u */
 119:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 5u)
 120:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_5_PORT << 4u) |
 121:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_5_PIN
 122:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 5u */
 123:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 6u)
 124:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_6_PORT << 4u) |
 125:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_6_PIN
 126:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 6u */
 127:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 7u)
 128:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_7_PORT << 4u) |
 129:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_7_PIN
 130:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 7u */
 131:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 8u)
 132:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_8_PORT << 4u) |
 133:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_8_PIN
 134:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 8u */
 135:.\Generated_Source\PSoC4/ADC.c ****         };
 136:.\Generated_Source\PSoC4/ADC.c ****     #endif /* End ADC_TOTAL_CHANNELS_NUM > 1u */
ARM GAS  C:\Users\Shahed\AppData\Local\Temp\cc22cuHL.s 			page 5


 137:.\Generated_Source\PSoC4/ADC.c **** 
 138:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_IRQ_REMOVE == 0u)
 139:.\Generated_Source\PSoC4/ADC.c ****         /* Start and set interrupt vector */
 140:.\Generated_Source\PSoC4/ADC.c ****         CyIntSetPriority(ADC_INTC_NUMBER, ADC_INTC_PRIOR_NUMBER);
  93              		.loc 1 140 0
  94 0006 0F20     		mov	r0, #15
  95 0008 0321     		mov	r1, #3
  96 000a FFF7FEFF 		bl	CyIntSetPriority
 141:.\Generated_Source\PSoC4/ADC.c ****         (void)CyIntSetVector(ADC_INTC_NUMBER, &ADC_ISR);
  97              		.loc 1 141 0
  98 000e 524B     		ldr	r3, .L16
  99 0010 0F20     		mov	r0, #15
 100 0012 191C     		mov	r1, r3
 101 0014 FFF7FEFF 		bl	CyIntSetVector
 142:.\Generated_Source\PSoC4/ADC.c ****     #endif   /* End ADC_IRQ_REMOVE */
 143:.\Generated_Source\PSoC4/ADC.c **** 
 144:.\Generated_Source\PSoC4/ADC.c ****     /* Init SAR and MUX registers */
 145:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CHAN_EN_REG = ADC_DEFAULT_EN_CHANNELS;
 102              		.loc 1 145 0
 103 0018 504B     		ldr	r3, .L16+4
 104 001a 0122     		mov	r2, #1
 105 001c 1A60     		str	r2, [r3]
 146:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
 106              		.loc 1 146 0
 107 001e 504B     		ldr	r3, .L16+8
 108 0020 4F4A     		ldr	r2, .L16+8
 109 0022 1168     		ldr	r1, [r2]
 147:.\Generated_Source\PSoC4/ADC.c ****         /* Enable the SAR internal pump when global pump is enabled */
 148:.\Generated_Source\PSoC4/ADC.c ****         (((ADC_PUMP_CTRL_REG & ADC_PUMP_CTRL_ENABLED) != 0u) ? 
 110              		.loc 1 148 0
 111 0024 4F4A     		ldr	r2, .L16+12
 112 0026 1268     		ldr	r2, [r2]
 146:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
 113              		.loc 1 146 0
 114 0028 002A     		cmp	r2, #0
 115 002a 01DA     		bge	.L6
 146:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
 116              		.loc 1 146 0 is_stmt 0 discriminator 1
 117 002c 4E4A     		ldr	r2, .L16+16
 118 002e 00E0     		b	.L7
 119              	.L6:
 146:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
 120              		.loc 1 146 0 discriminator 2
 121 0030 4E4A     		ldr	r2, .L16+20
 122              	.L7:
 146:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
 123              		.loc 1 146 0 discriminator 3
 124 0032 0A43     		orr	r2, r1
 125 0034 1A60     		str	r2, [r3]
 149:.\Generated_Source\PSoC4/ADC.c ****         ADC_BOOSTPUMP_EN : 0u);
 150:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_CTRL_REG = ADC_DEFAULT_SAMPLE_CTRL_REG_CFG;
 126              		.loc 1 150 0 is_stmt 1 discriminator 3
 127 0036 4E4B     		ldr	r3, .L16+24
 128 0038 4E4A     		ldr	r2, .L16+28
 129 003a 1A60     		str	r2, [r3]
 151:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG = ADC_DEFAULT_RANGE_THRES_REG_CFG;
 130              		.loc 1 151 0 discriminator 3
ARM GAS  C:\Users\Shahed\AppData\Local\Temp\cc22cuHL.s 			page 6


 131 003c 4E4B     		ldr	r3, .L16+32
 132 003e 4F4A     		ldr	r2, .L16+36
 133 0040 1A60     		str	r2, [r3]
 152:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_COND_REG  = ADC_COMPARE_MODE;
 134              		.loc 1 152 0 discriminator 3
 135 0042 4F4B     		ldr	r3, .L16+40
 136 0044 0022     		mov	r2, #0
 137 0046 1A60     		str	r2, [r3]
 153:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_TIME01_REG = ADC_DEFAULT_SAMPLE_TIME01_REG_CFG;
 138              		.loc 1 153 0 discriminator 3
 139 0048 4E4B     		ldr	r3, .L16+44
 140 004a 4F4A     		ldr	r2, .L16+48
 141 004c 1A60     		str	r2, [r3]
 154:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_TIME23_REG = ADC_DEFAULT_SAMPLE_TIME23_REG_CFG;
 142              		.loc 1 154 0 discriminator 3
 143 004e 4F4B     		ldr	r3, .L16+52
 144 0050 4D4A     		ldr	r2, .L16+48
 145 0052 1A60     		str	r2, [r3]
 155:.\Generated_Source\PSoC4/ADC.c ****     
 156:.\Generated_Source\PSoC4/ADC.c ****     /* Connect Vm to VSSA when even one channel is single-ended or multiple channels configured */
 157:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_DEFAULT_MUX_SWITCH0 != 0u)
 158:.\Generated_Source\PSoC4/ADC.c ****         ADC_MUX_SWITCH0_REG |= ADC_DEFAULT_MUX_SWITCH0;
 159:.\Generated_Source\PSoC4/ADC.c ****         /* Set MUX_HW_CTRL_VSSA in MUX_SWITCH_HW_CTRL when multiple channels enabled */
 160:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_TOTAL_CHANNELS_NUM > 1u)
 161:.\Generated_Source\PSoC4/ADC.c ****             ADC_MUX_SWITCH_HW_CTRL_REG |= ADC_DEFAULT_MUX_SWITCH0;
 162:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_TOTAL_CHANNELS_NUM > 1u */
 163:.\Generated_Source\PSoC4/ADC.c ****     #endif /*ADC_CHANNELS_MODE !=0 */
 164:.\Generated_Source\PSoC4/ADC.c **** 
 165:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SATURATE_INTR_MASK_REG = 0u;
 146              		.loc 1 165 0 discriminator 3
 147 0054 4E4B     		ldr	r3, .L16+56
 148 0056 0022     		mov	r2, #0
 149 0058 1A60     		str	r2, [r3]
 166:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_INTR_MASK_REG = 0u;
 150              		.loc 1 166 0 discriminator 3
 151 005a 4E4B     		ldr	r3, .L16+60
 152 005c 0022     		mov	r2, #0
 153 005e 1A60     		str	r2, [r3]
 167:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_INTR_MASK_REG = ADC_SAR_INTR_MASK;
 154              		.loc 1 167 0 discriminator 3
 155 0060 4D4B     		ldr	r3, .L16+64
 156 0062 0122     		mov	r2, #1
 157 0064 1A60     		str	r2, [r3]
 168:.\Generated_Source\PSoC4/ADC.c **** 
 169:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_PSOC4)
 170:.\Generated_Source\PSoC4/ADC.c ****         ADC_ANA_TRIM_REG = ADC_TRIM_COEF;
 171:.\Generated_Source\PSoC4/ADC.c ****     #endif /* (ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_PSOC4) */
 172:.\Generated_Source\PSoC4/ADC.c **** 
 173:.\Generated_Source\PSoC4/ADC.c ****     /* Read and modify default configuration based on characterization */
 174:.\Generated_Source\PSoC4/ADC.c ****     tmpRegVal = ADC_SAR_DFT_CTRL_REG;
 158              		.loc 1 174 0 discriminator 3
 159 0066 4D4B     		ldr	r3, .L16+68
 160 0068 1B68     		ldr	r3, [r3]
 161 006a 7B60     		str	r3, [r7, #4]
 175:.\Generated_Source\PSoC4/ADC.c ****     tmpRegVal &= (uint32)~ADC_DCEN;
 162              		.loc 1 175 0 discriminator 3
 163 006c 7A68     		ldr	r2, [r7, #4]
ARM GAS  C:\Users\Shahed\AppData\Local\Temp\cc22cuHL.s 			page 7


 164 006e 4C4B     		ldr	r3, .L16+72
 165 0070 1340     		and	r3, r2
 166 0072 7B60     		str	r3, [r7, #4]
 176:.\Generated_Source\PSoC4/ADC.c ****     
 177:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_PSOC4)
 178:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_NOMINAL_CLOCK_FREQ > (ADC_MAX_FREQUENCY / 2))
 179:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_SEL_CSEL_DFT_CHAR;
 180:.\Generated_Source\PSoC4/ADC.c ****         #else  /* clock speed < 9 Mhz */
 181:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_DLY_INC;
 182:.\Generated_Source\PSoC4/ADC.c ****         #endif /* clock speed > 9 Mhz */
 183:.\Generated_Source\PSoC4/ADC.c ****     #else
 184:.\Generated_Source\PSoC4/ADC.c ****         #if ((ADC_DEFAULT_VREF_SEL == ADC__INTERNAL1024) || \
 185:.\Generated_Source\PSoC4/ADC.c ****              (ADC_DEFAULT_VREF_SEL == ADC__INTERNALVREF))
 186:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_DLY_INC;
 187:.\Generated_Source\PSoC4/ADC.c ****         #else
 188:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_DCEN;
 167              		.loc 1 188 0 discriminator 3
 168 0074 7B68     		ldr	r3, [r7, #4]
 169 0076 8022     		mov	r2, #128
 170 0078 9205     		lsl	r2, r2, #22
 171 007a 1343     		orr	r3, r2
 172 007c 7B60     		str	r3, [r7, #4]
 189:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal &= (uint32)~ADC_DLY_INC;
 173              		.loc 1 189 0 discriminator 3
 174 007e 7B68     		ldr	r3, [r7, #4]
 175 0080 0122     		mov	r2, #1
 176 0082 9343     		bic	r3, r2
 177 0084 7B60     		str	r3, [r7, #4]
 190:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ((ADC_DEFAULT_VREF_SEL == ADC__INTERNAL1024) || \
 191:.\Generated_Source\PSoC4/ADC.c ****                    (ADC_DEFAULT_VREF_SEL == ADC__INTERNALVREF)) */
 192:.\Generated_Source\PSoC4/ADC.c ****     #endif /* (ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_PSOC4) */
 193:.\Generated_Source\PSoC4/ADC.c ****     
 194:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_DFT_CTRL_REG = tmpRegVal;
 178              		.loc 1 194 0 discriminator 3
 179 0086 454B     		ldr	r3, .L16+68
 180 0088 7A68     		ldr	r2, [r7, #4]
 181 008a 1A60     		str	r2, [r3]
 195:.\Generated_Source\PSoC4/ADC.c **** 
 196:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_MAX_RESOLUTION != ADC_RESOLUTION_12)
 197:.\Generated_Source\PSoC4/ADC.c ****         ADC_WOUNDING_REG = ADC_ALT_WOUNDING;
 198:.\Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_MAX_RESOLUTION != ADC_RESOLUTION_12 */
 199:.\Generated_Source\PSoC4/ADC.c **** 
 200:.\Generated_Source\PSoC4/ADC.c ****     for(chNum = 0u; chNum < ADC_TOTAL_CHANNELS_NUM; chNum++)
 182              		.loc 1 200 0 discriminator 3
 183 008c 0023     		mov	r3, #0
 184 008e FB60     		str	r3, [r7, #12]
 185 0090 5CE0     		b	.L8
 186              	.L15:
 201:.\Generated_Source\PSoC4/ADC.c ****     {
 202:.\Generated_Source\PSoC4/ADC.c ****         tmpRegVal = (ADC_channelsConfig[chNum] & ADC_CHANNEL_CONFIG_MASK);
 187              		.loc 1 202 0
 188 0092 A023     		mov	r3, #160
 189 0094 DA00     		lsl	r2, r3, #3
 190 0096 DC23     		mov	r3, #220
 191 0098 9B01     		lsl	r3, r3, #6
 192 009a 1340     		and	r3, r2
 193 009c 7B60     		str	r3, [r7, #4]
ARM GAS  C:\Users\Shahed\AppData\Local\Temp\cc22cuHL.s 			page 8


 203:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_TOTAL_CHANNELS_NUM > 1u)
 204:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_InputsPlacement[chNum];
 205:.\Generated_Source\PSoC4/ADC.c ****         #endif /* End ADC_TOTAL_CHANNELS_NUM > 1u */
 206:.\Generated_Source\PSoC4/ADC.c ****         
 207:.\Generated_Source\PSoC4/ADC.c ****         
 208:.\Generated_Source\PSoC4/ADC.c ****         /* When the part is limited to 10-bit then the SUB_RESOLUTION bit
 209:.\Generated_Source\PSoC4/ADC.c ****         *  will be ignored and the RESOLUTION bit selects between 10-bit
 210:.\Generated_Source\PSoC4/ADC.c ****         *  (0) and 8-bit (1) resolution.
 211:.\Generated_Source\PSoC4/ADC.c ****         */
 212:.\Generated_Source\PSoC4/ADC.c ****         #if((ADC_MAX_RESOLUTION != ADC_RESOLUTION_12) && \
 213:.\Generated_Source\PSoC4/ADC.c ****             (ADC_ALT_WOUNDING == ADC_WOUNDING_10BIT))
 214:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal &= (uint32)(~ADC_ALT_RESOLUTION_ON);
 215:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_MAX_RESOLUTION != ADC_RESOLUTION_12 */
 216:.\Generated_Source\PSoC4/ADC.c **** 
 217:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_INJ_CHANNEL_ENABLED)
 218:.\Generated_Source\PSoC4/ADC.c ****         if(chNum < ADC_SEQUENCED_CHANNELS_NUM)
 219:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_INJ_CHANNEL_ENABLED */
 220:.\Generated_Source\PSoC4/ADC.c ****         {
 221:.\Generated_Source\PSoC4/ADC.c ****             CY_SET_REG32((reg32 *)(ADC_SAR_CHAN_CONFIG_IND + (uint32)(chNum << 2)), tmpRegVal);
 194              		.loc 1 221 0
 195 009e FB68     		ldr	r3, [r7, #12]
 196 00a0 9B00     		lsl	r3, r3, #2
 197 00a2 404A     		ldr	r2, .L16+76
 198 00a4 9B18     		add	r3, r3, r2
 199 00a6 7A68     		ldr	r2, [r7, #4]
 200 00a8 1A60     		str	r2, [r3]
 222:.\Generated_Source\PSoC4/ADC.c **** 
 223:.\Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chNum] & ADC_IS_SATURATE_EN_MASK) != 0u)
 201              		.loc 1 223 0
 202 00aa A023     		mov	r3, #160
 203 00ac DA00     		lsl	r2, r3, #3
 204 00ae 0123     		mov	r3, #1
 205 00b0 1340     		and	r3, r2
 206 00b2 0AD0     		beq	.L9
 224:.\Generated_Source\PSoC4/ADC.c ****             {
 225:.\Generated_Source\PSoC4/ADC.c ****                 ADC_SAR_SATURATE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 207              		.loc 1 225 0
 208 00b4 364B     		ldr	r3, .L16+56
 209 00b6 364A     		ldr	r2, .L16+56
 210 00b8 1168     		ldr	r1, [r2]
 211 00ba FA68     		ldr	r2, [r7, #12]
 212 00bc 0120     		mov	r0, #1
 213 00be 041C     		mov	r4, r0
 214 00c0 9440     		lsl	r4, r4, r2
 215 00c2 221C     		mov	r2, r4
 216 00c4 92B2     		uxth	r2, r2
 217 00c6 0A43     		orr	r2, r1
 218 00c8 1A60     		str	r2, [r3]
 219              	.L9:
 226:.\Generated_Source\PSoC4/ADC.c ****             }
 227:.\Generated_Source\PSoC4/ADC.c **** 
 228:.\Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chNum] & ADC_IS_RANGE_CTRL_EN_MASK) != 0u)
 220              		.loc 1 228 0
 221 00ca A023     		mov	r3, #160
 222 00cc DA00     		lsl	r2, r3, #3
 223 00ce 0223     		mov	r3, #2
 224 00d0 1340     		and	r3, r2
ARM GAS  C:\Users\Shahed\AppData\Local\Temp\cc22cuHL.s 			page 9


 225 00d2 0AD0     		beq	.L10
 229:.\Generated_Source\PSoC4/ADC.c ****             {
 230:.\Generated_Source\PSoC4/ADC.c ****                 ADC_SAR_RANGE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 226              		.loc 1 230 0
 227 00d4 2F4B     		ldr	r3, .L16+60
 228 00d6 2F4A     		ldr	r2, .L16+60
 229 00d8 1168     		ldr	r1, [r2]
 230 00da FA68     		ldr	r2, [r7, #12]
 231 00dc 0120     		mov	r0, #1
 232 00de 041C     		mov	r4, r0
 233 00e0 9440     		lsl	r4, r4, r2
 234 00e2 221C     		mov	r2, r4
 235 00e4 92B2     		uxth	r2, r2
 236 00e6 0A43     		orr	r2, r1
 237 00e8 1A60     		str	r2, [r3]
 238              	.L10:
 231:.\Generated_Source\PSoC4/ADC.c ****             }
 232:.\Generated_Source\PSoC4/ADC.c ****         }
 233:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_INJ_CHANNEL_ENABLED)
 234:.\Generated_Source\PSoC4/ADC.c ****             else
 235:.\Generated_Source\PSoC4/ADC.c ****             {
 236:.\Generated_Source\PSoC4/ADC.c ****                 CY_SET_REG32(ADC_SAR_INJ_CHAN_CONFIG_PTR, tmpRegVal | ADC_INJ_TAILGATING);
 237:.\Generated_Source\PSoC4/ADC.c **** 
 238:.\Generated_Source\PSoC4/ADC.c ****                 if((ADC_channelsConfig[chNum] & ADC_IS_SATURATE_EN_MASK) != 0u)
 239:.\Generated_Source\PSoC4/ADC.c ****                 {
 240:.\Generated_Source\PSoC4/ADC.c ****                     ADC_SAR_INTR_MASK_REG |= ADC_INJ_SATURATE_MASK;
 241:.\Generated_Source\PSoC4/ADC.c ****                 }
 242:.\Generated_Source\PSoC4/ADC.c **** 
 243:.\Generated_Source\PSoC4/ADC.c ****                 if((ADC_channelsConfig[chNum] & ADC_IS_RANGE_CTRL_EN_MASK) != 0u)
 244:.\Generated_Source\PSoC4/ADC.c ****                 {
 245:.\Generated_Source\PSoC4/ADC.c ****                     ADC_SAR_INTR_MASK_REG |= ADC_INJ_RANGE_MASK;
 246:.\Generated_Source\PSoC4/ADC.c ****                 }
 247:.\Generated_Source\PSoC4/ADC.c ****             }
 248:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_INJ_CHANNEL_ENABLED */
 249:.\Generated_Source\PSoC4/ADC.c **** 
 250:.\Generated_Source\PSoC4/ADC.c ****         if((ADC_channelsConfig[chNum] & ADC_ALT_RESOLUTION_ON) != 0u)
 239              		.loc 1 250 0
 240 00ea A023     		mov	r3, #160
 241 00ec DA00     		lsl	r2, r3, #3
 242 00ee 8023     		mov	r3, #128
 243 00f0 9B00     		lsl	r3, r3, #2
 244 00f2 1340     		and	r3, r2
 245 00f4 03D0     		beq	.L11
 251:.\Generated_Source\PSoC4/ADC.c ****         {
 252:.\Generated_Source\PSoC4/ADC.c ****                counts = (int32)ADC_DEFAULT_MAX_WRK_ALT;
 246              		.loc 1 252 0
 247 00f6 8023     		mov	r3, #128
 248 00f8 DB00     		lsl	r3, r3, #3
 249 00fa BB60     		str	r3, [r7, #8]
 250 00fc 02E0     		b	.L12
 251              	.L11:
 253:.\Generated_Source\PSoC4/ADC.c ****         }
 254:.\Generated_Source\PSoC4/ADC.c ****         else
 255:.\Generated_Source\PSoC4/ADC.c ****         {
 256:.\Generated_Source\PSoC4/ADC.c ****                counts = (int32)ADC_SAR_WRK_MAX_12BIT;
 252              		.loc 1 256 0
 253 00fe 8023     		mov	r3, #128
ARM GAS  C:\Users\Shahed\AppData\Local\Temp\cc22cuHL.s 			page 10


 254 0100 5B01     		lsl	r3, r3, #5
 255 0102 BB60     		str	r3, [r7, #8]
 256              	.L12:
 257:.\Generated_Source\PSoC4/ADC.c ****         }
 258:.\Generated_Source\PSoC4/ADC.c **** 
 259:.\Generated_Source\PSoC4/ADC.c ****         if((ADC_channelsConfig[chNum] & ADC_DIFFERENTIAL_EN) == 0u)
 257              		.loc 1 259 0
 258 0104 A023     		mov	r3, #160
 259 0106 DA00     		lsl	r2, r3, #3
 260 0108 8023     		mov	r3, #128
 261 010a 5B00     		lsl	r3, r3, #1
 262 010c 1340     		and	r3, r2
 263 010e 05D1     		bne	.L13
 260:.\Generated_Source\PSoC4/ADC.c ****         {
 261:.\Generated_Source\PSoC4/ADC.c ****             #if((ADC_DEFAULT_SE_RESULT_FORMAT_SEL == ADC__FSIGNED) && \
 262:.\Generated_Source\PSoC4/ADC.c ****                 (ADC_DEFAULT_NEG_INPUT_SEL == ADC__VREF))
 263:.\Generated_Source\PSoC4/ADC.c ****                 /* Set offset to the minus half scale to convert results to unsigned format */
 264:.\Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = (int16)(counts / -2);
 265:.\Generated_Source\PSoC4/ADC.c ****             #else
 266:.\Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = 0;
 264              		.loc 1 266 0
 265 0110 254B     		ldr	r3, .L16+80
 266 0112 FA68     		ldr	r2, [r7, #12]
 267 0114 5200     		lsl	r2, r2, #1
 268 0116 0021     		mov	r1, #0
 269 0118 D152     		strh	r1, [r2, r3]
 270 011a 04E0     		b	.L14
 271              	.L13:
 267:.\Generated_Source\PSoC4/ADC.c ****             #endif /* end DEFAULT_SE_RESULT_FORMAT_SEL == ADC__FSIGNED */
 268:.\Generated_Source\PSoC4/ADC.c ****         }
 269:.\Generated_Source\PSoC4/ADC.c ****         else    /* Differential channel */
 270:.\Generated_Source\PSoC4/ADC.c ****         {
 271:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC__FUNSIGNED)
 272:.\Generated_Source\PSoC4/ADC.c ****                 /* Set offset to the half scale to convert results to signed format */
 273:.\Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = (int16)(counts / 2);
 274:.\Generated_Source\PSoC4/ADC.c ****             #else
 275:.\Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = 0;
 272              		.loc 1 275 0
 273 011c 224B     		ldr	r3, .L16+80
 274 011e FA68     		ldr	r2, [r7, #12]
 275 0120 5200     		lsl	r2, r2, #1
 276 0122 0021     		mov	r1, #0
 277 0124 D152     		strh	r1, [r2, r3]
 278              	.L14:
 276:.\Generated_Source\PSoC4/ADC.c ****             #endif /* end ADC_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC__FUNSIGNED */
 277:.\Generated_Source\PSoC4/ADC.c ****         }
 278:.\Generated_Source\PSoC4/ADC.c ****         /* Calculate gain in counts per 10 volts with rounding */
 279:.\Generated_Source\PSoC4/ADC.c ****         ADC_countsPer10Volt[chNum] = (int16)(((counts * ADC_10MV_COUNTS) +
 279              		.loc 1 279 0
 280 0126 BB68     		ldr	r3, [r7, #8]
 281 0128 204A     		ldr	r2, .L16+84
 282 012a 5343     		mul	r3, r2
 283 012c 204A     		ldr	r2, .L16+88
 284 012e 9B18     		add	r3, r3, r2
 280:.\Generated_Source\PSoC4/ADC.c ****                             ADC_DEFAULT_VREF_MV_VALUE) / (ADC_DEFAULT_VREF_MV_VALUE * 2));
 285              		.loc 1 280 0
 286 0130 181C     		mov	r0, r3
ARM GAS  C:\Users\Shahed\AppData\Local\Temp\cc22cuHL.s 			page 11


 287 0132 2049     		ldr	r1, .L16+92
 288 0134 FFF7FEFF 		bl	__aeabi_idiv
 289 0138 031C     		mov	r3, r0
 279:.\Generated_Source\PSoC4/ADC.c ****         ADC_countsPer10Volt[chNum] = (int16)(((counts * ADC_10MV_COUNTS) +
 290              		.loc 1 279 0
 291 013a 9BB2     		uxth	r3, r3
 292 013c 19B2     		sxth	r1, r3
 293 013e 1E4B     		ldr	r3, .L16+96
 294 0140 FA68     		ldr	r2, [r7, #12]
 295 0142 9200     		lsl	r2, r2, #2
 296 0144 D150     		str	r1, [r2, r3]
 200:.\Generated_Source\PSoC4/ADC.c ****     for(chNum = 0u; chNum < ADC_TOTAL_CHANNELS_NUM; chNum++)
 297              		.loc 1 200 0
 298 0146 FB68     		ldr	r3, [r7, #12]
 299 0148 0133     		add	r3, r3, #1
 300 014a FB60     		str	r3, [r7, #12]
 301              	.L8:
 200:.\Generated_Source\PSoC4/ADC.c ****     for(chNum = 0u; chNum < ADC_TOTAL_CHANNELS_NUM; chNum++)
 302              		.loc 1 200 0 is_stmt 0 discriminator 1
 303 014c FB68     		ldr	r3, [r7, #12]
 304 014e 002B     		cmp	r3, #0
 305 0150 9FD0     		beq	.L15
 281:.\Generated_Source\PSoC4/ADC.c ****     }
 282:.\Generated_Source\PSoC4/ADC.c **** }
 306              		.loc 1 282 0 is_stmt 1
 307 0152 BD46     		mov	sp, r7
 308 0154 05B0     		add	sp, sp, #20
 309              		@ sp needed
 310 0156 90BD     		pop	{r4, r7, pc}
 311              	.L17:
 312              		.align	2
 313              	.L16:
 314 0158 00000000 		.word	ADC_ISR
 315 015c 20003A40 		.word	1077542944
 316 0160 00003A40 		.word	1077542912
 317 0164 80033A40 		.word	1077543808
 318 0168 70021053 		.word	1393558128
 319 016c 70020053 		.word	1392509552
 320 0170 04003A40 		.word	1077542916
 321 0174 BD000080 		.word	-2147483459
 322 0178 18003A40 		.word	1077542936
 323 017c 0000FF07 		.word	134152192
 324 0180 1C003A40 		.word	1077542940
 325 0184 10003A40 		.word	1077542928
 326 0188 04000400 		.word	262148
 327 018c 14003A40 		.word	1077542932
 328 0190 28023A40 		.word	1077543464
 329 0194 38023A40 		.word	1077543480
 330 0198 18023A40 		.word	1077543448
 331 019c 30003A40 		.word	1077542960
 332 01a0 FFFFFFDF 		.word	-536870913
 333 01a4 80003A40 		.word	1077543040
 334 01a8 00000000 		.word	ADC_offset
 335 01ac 10270000 		.word	10000
 336 01b0 E40C0000 		.word	3300
 337 01b4 C8190000 		.word	6600
 338 01b8 00000000 		.word	ADC_countsPer10Volt
ARM GAS  C:\Users\Shahed\AppData\Local\Temp\cc22cuHL.s 			page 12


 339              		.cfi_endproc
 340              	.LFE3:
 341              		.size	ADC_Init, .-ADC_Init
 342              		.section	.text.ADC_Enable,"ax",%progbits
 343              		.align	2
 344              		.global	ADC_Enable
 345              		.code	16
 346              		.thumb_func
 347              		.type	ADC_Enable, %function
 348              	ADC_Enable:
 349              	.LFB4:
 283:.\Generated_Source\PSoC4/ADC.c **** 
 284:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 285:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SAR_1_Enable
 286:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 287:.\Generated_Source\PSoC4/ADC.c **** *
 288:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 289:.\Generated_Source\PSoC4/ADC.c **** *  Enables the clock and analog power for SAR ADC.
 290:.\Generated_Source\PSoC4/ADC.c **** *
 291:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 292:.\Generated_Source\PSoC4/ADC.c **** *  None.
 293:.\Generated_Source\PSoC4/ADC.c **** *
 294:.\Generated_Source\PSoC4/ADC.c **** * Return:
 295:.\Generated_Source\PSoC4/ADC.c **** *  None.
 296:.\Generated_Source\PSoC4/ADC.c **** *
 297:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 298:.\Generated_Source\PSoC4/ADC.c **** void ADC_Enable(void)
 299:.\Generated_Source\PSoC4/ADC.c **** {
 350              		.loc 1 299 0
 351              		.cfi_startproc
 352 0000 80B5     		push	{r7, lr}
 353              		.cfi_def_cfa_offset 8
 354              		.cfi_offset 7, -8
 355              		.cfi_offset 14, -4
 356 0002 00AF     		add	r7, sp, #0
 357              		.cfi_def_cfa_register 7
 300:.\Generated_Source\PSoC4/ADC.c ****     if (0u == (ADC_SAR_CTRL_REG & ADC_ENABLE))
 358              		.loc 1 300 0
 359 0004 0A4B     		ldr	r3, .L21
 360 0006 1B68     		ldr	r3, [r3]
 361 0008 002B     		cmp	r3, #0
 362 000a 0EDB     		blt	.L18
 301:.\Generated_Source\PSoC4/ADC.c ****     {
 302:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_CY_SAR_IP_VER != ADC_CY_SAR_IP_PSOC4)
 303:.\Generated_Source\PSoC4/ADC.c **** 
 304:.\Generated_Source\PSoC4/ADC.c ****             while (0u != (ADC_SAR_STATUS_REG & ADC_STATUS_BUSY))
 363              		.loc 1 304 0
 364 000c C046     		mov	r8, r8
 365              	.L20:
 366              		.loc 1 304 0 is_stmt 0 discriminator 1
 367 000e 094B     		ldr	r3, .L21+4
 368 0010 1B68     		ldr	r3, [r3]
 369 0012 002B     		cmp	r3, #0
 370 0014 FBDB     		blt	.L20
 305:.\Generated_Source\PSoC4/ADC.c ****             {
 306:.\Generated_Source\PSoC4/ADC.c ****                 /* wait for SAR to go idle for to avoid deadlock */
 307:.\Generated_Source\PSoC4/ADC.c ****             }
ARM GAS  C:\Users\Shahed\AppData\Local\Temp\cc22cuHL.s 			page 13


 308:.\Generated_Source\PSoC4/ADC.c ****         #endif /* (ADC_CY_SAR_IP_VER != ADC_CY_SAR_IP_PSOC4) */
 309:.\Generated_Source\PSoC4/ADC.c ****         
 310:.\Generated_Source\PSoC4/ADC.c ****         ADC_SAR_CTRL_REG |= ADC_ENABLE;
 371              		.loc 1 310 0 is_stmt 1
 372 0016 064B     		ldr	r3, .L21
 373 0018 054A     		ldr	r2, .L21
 374 001a 1268     		ldr	r2, [r2]
 375 001c 8021     		mov	r1, #128
 376 001e 0906     		lsl	r1, r1, #24
 377 0020 0A43     		orr	r2, r1
 378 0022 1A60     		str	r2, [r3]
 311:.\Generated_Source\PSoC4/ADC.c ****         
 312:.\Generated_Source\PSoC4/ADC.c ****         /* The block is ready to use 10 us after the enable signal is set high. */
 313:.\Generated_Source\PSoC4/ADC.c ****         CyDelayUs(ADC_10US_DELAY);         
 379              		.loc 1 313 0
 380 0024 0A20     		mov	r0, #10
 381 0026 FFF7FEFF 		bl	CyDelayUs
 382              	.L18:
 314:.\Generated_Source\PSoC4/ADC.c ****     }
 315:.\Generated_Source\PSoC4/ADC.c **** }
 383              		.loc 1 315 0
 384 002a BD46     		mov	sp, r7
 385              		@ sp needed
 386 002c 80BD     		pop	{r7, pc}
 387              	.L22:
 388 002e C046     		.align	2
 389              	.L21:
 390 0030 00003A40 		.word	1077542912
 391 0034 08023A40 		.word	1077543432
 392              		.cfi_endproc
 393              	.LFE4:
 394              		.size	ADC_Enable, .-ADC_Enable
 395              		.section	.text.ADC_Stop,"ax",%progbits
 396              		.align	2
 397              		.global	ADC_Stop
 398              		.code	16
 399              		.thumb_func
 400              		.type	ADC_Stop, %function
 401              	ADC_Stop:
 402              	.LFB5:
 316:.\Generated_Source\PSoC4/ADC.c **** 
 317:.\Generated_Source\PSoC4/ADC.c **** 
 318:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 319:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Stop
 320:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 321:.\Generated_Source\PSoC4/ADC.c **** *
 322:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 323:.\Generated_Source\PSoC4/ADC.c **** *  This function stops ADC conversions and puts the ADC into its lowest power
 324:.\Generated_Source\PSoC4/ADC.c **** *  mode.
 325:.\Generated_Source\PSoC4/ADC.c **** *
 326:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 327:.\Generated_Source\PSoC4/ADC.c **** *  None.
 328:.\Generated_Source\PSoC4/ADC.c **** *
 329:.\Generated_Source\PSoC4/ADC.c **** * Return:
 330:.\Generated_Source\PSoC4/ADC.c **** *  None.
 331:.\Generated_Source\PSoC4/ADC.c **** *
 332:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
ARM GAS  C:\Users\Shahed\AppData\Local\Temp\cc22cuHL.s 			page 14


 333:.\Generated_Source\PSoC4/ADC.c **** void ADC_Stop(void)
 334:.\Generated_Source\PSoC4/ADC.c **** {
 403              		.loc 1 334 0
 404              		.cfi_startproc
 405 0000 80B5     		push	{r7, lr}
 406              		.cfi_def_cfa_offset 8
 407              		.cfi_offset 7, -8
 408              		.cfi_offset 14, -4
 409 0002 00AF     		add	r7, sp, #0
 410              		.cfi_def_cfa_register 7
 335:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG &= (uint32)~ADC_ENABLE;
 411              		.loc 1 335 0
 412 0004 034B     		ldr	r3, .L24
 413 0006 034A     		ldr	r2, .L24
 414 0008 1268     		ldr	r2, [r2]
 415 000a 5200     		lsl	r2, r2, #1
 416 000c 5208     		lsr	r2, r2, #1
 417 000e 1A60     		str	r2, [r3]
 336:.\Generated_Source\PSoC4/ADC.c **** }
 418              		.loc 1 336 0
 419 0010 BD46     		mov	sp, r7
 420              		@ sp needed
 421 0012 80BD     		pop	{r7, pc}
 422              	.L25:
 423              		.align	2
 424              	.L24:
 425 0014 00003A40 		.word	1077542912
 426              		.cfi_endproc
 427              	.LFE5:
 428              		.size	ADC_Stop, .-ADC_Stop
 429              		.section	.text.ADC_StartConvert,"ax",%progbits
 430              		.align	2
 431              		.global	ADC_StartConvert
 432              		.code	16
 433              		.thumb_func
 434              		.type	ADC_StartConvert, %function
 435              	ADC_StartConvert:
 436              	.LFB6:
 337:.\Generated_Source\PSoC4/ADC.c **** 
 338:.\Generated_Source\PSoC4/ADC.c **** 
 339:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 340:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_StartConvert
 341:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 342:.\Generated_Source\PSoC4/ADC.c **** *
 343:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 344:.\Generated_Source\PSoC4/ADC.c **** *  Description:
 345:.\Generated_Source\PSoC4/ADC.c **** *  For free running mode, this API starts the conversion process and it
 346:.\Generated_Source\PSoC4/ADC.c **** *  runs continuously.
 347:.\Generated_Source\PSoC4/ADC.c **** *
 348:.\Generated_Source\PSoC4/ADC.c **** *  In a triggered mode, this routine triggers every conversion by
 349:.\Generated_Source\PSoC4/ADC.c **** *  writing into the FW_TRIGGER bit in SAR_START_CTRL reg. In triggered mode,
 350:.\Generated_Source\PSoC4/ADC.c **** *  every conversion has to start by this API.
 351:.\Generated_Source\PSoC4/ADC.c **** *
 352:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 353:.\Generated_Source\PSoC4/ADC.c **** *  None.
 354:.\Generated_Source\PSoC4/ADC.c **** *
 355:.\Generated_Source\PSoC4/ADC.c **** * Return:
ARM GAS  C:\Users\Shahed\AppData\Local\Temp\cc22cuHL.s 			page 15


 356:.\Generated_Source\PSoC4/ADC.c **** *  None.
 357:.\Generated_Source\PSoC4/ADC.c **** *
 358:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 359:.\Generated_Source\PSoC4/ADC.c **** void ADC_StartConvert(void)
 360:.\Generated_Source\PSoC4/ADC.c **** {
 437              		.loc 1 360 0
 438              		.cfi_startproc
 439 0000 80B5     		push	{r7, lr}
 440              		.cfi_def_cfa_offset 8
 441              		.cfi_offset 7, -8
 442              		.cfi_offset 14, -4
 443 0002 00AF     		add	r7, sp, #0
 444              		.cfi_def_cfa_register 7
 361:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_DEFAULT_SAMPLE_MODE_SEL == ADC__FREERUNNING)
 362:.\Generated_Source\PSoC4/ADC.c ****         ADC_SAR_SAMPLE_CTRL_REG |= ADC_CONTINUOUS_EN;
 445              		.loc 1 362 0
 446 0004 044B     		ldr	r3, .L27
 447 0006 044A     		ldr	r2, .L27
 448 0008 1268     		ldr	r2, [r2]
 449 000a 8021     		mov	r1, #128
 450 000c 4902     		lsl	r1, r1, #9
 451 000e 0A43     		orr	r2, r1
 452 0010 1A60     		str	r2, [r3]
 363:.\Generated_Source\PSoC4/ADC.c ****     #else /* Firmware trigger */
 364:.\Generated_Source\PSoC4/ADC.c ****         ADC_SAR_START_CTRL_REG = ADC_FW_TRIGGER;
 365:.\Generated_Source\PSoC4/ADC.c ****     #endif /* End ADC_DEFAULT_SAMPLE_MODE == ADC__FREERUNNING */
 366:.\Generated_Source\PSoC4/ADC.c **** 
 367:.\Generated_Source\PSoC4/ADC.c **** }
 453              		.loc 1 367 0
 454 0012 BD46     		mov	sp, r7
 455              		@ sp needed
 456 0014 80BD     		pop	{r7, pc}
 457              	.L28:
 458 0016 C046     		.align	2
 459              	.L27:
 460 0018 04003A40 		.word	1077542916
 461              		.cfi_endproc
 462              	.LFE6:
 463              		.size	ADC_StartConvert, .-ADC_StartConvert
 464              		.section	.text.ADC_StopConvert,"ax",%progbits
 465              		.align	2
 466              		.global	ADC_StopConvert
 467              		.code	16
 468              		.thumb_func
 469              		.type	ADC_StopConvert, %function
 470              	ADC_StopConvert:
 471              	.LFB7:
 368:.\Generated_Source\PSoC4/ADC.c **** 
 369:.\Generated_Source\PSoC4/ADC.c **** 
 370:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 371:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_StopConvert
 372:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 373:.\Generated_Source\PSoC4/ADC.c **** *
 374:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 375:.\Generated_Source\PSoC4/ADC.c **** *  Forces the ADC to stop all conversions.
 376:.\Generated_Source\PSoC4/ADC.c **** *
 377:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
ARM GAS  C:\Users\Shahed\AppData\Local\Temp\cc22cuHL.s 			page 16


 378:.\Generated_Source\PSoC4/ADC.c **** *  None.
 379:.\Generated_Source\PSoC4/ADC.c **** *
 380:.\Generated_Source\PSoC4/ADC.c **** * Return:
 381:.\Generated_Source\PSoC4/ADC.c **** *  None.
 382:.\Generated_Source\PSoC4/ADC.c **** *
 383:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 384:.\Generated_Source\PSoC4/ADC.c **** void ADC_StopConvert(void)
 385:.\Generated_Source\PSoC4/ADC.c **** {
 472              		.loc 1 385 0
 473              		.cfi_startproc
 474 0000 80B5     		push	{r7, lr}
 475              		.cfi_def_cfa_offset 8
 476              		.cfi_offset 7, -8
 477              		.cfi_offset 14, -4
 478 0002 00AF     		add	r7, sp, #0
 479              		.cfi_def_cfa_register 7
 386:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_DEFAULT_SAMPLE_MODE_SEL == ADC__FREERUNNING)
 387:.\Generated_Source\PSoC4/ADC.c ****         ADC_SAR_SAMPLE_CTRL_REG &= (uint32)(~ADC_CONTINUOUS_EN);
 480              		.loc 1 387 0
 481 0004 034B     		ldr	r3, .L30
 482 0006 034A     		ldr	r2, .L30
 483 0008 1168     		ldr	r1, [r2]
 484 000a 034A     		ldr	r2, .L30+4
 485 000c 0A40     		and	r2, r1
 486 000e 1A60     		str	r2, [r3]
 388:.\Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_DEFAULT_SAMPLE_MODE == ADC__FREERUNNING */
 389:.\Generated_Source\PSoC4/ADC.c **** }
 487              		.loc 1 389 0
 488 0010 BD46     		mov	sp, r7
 489              		@ sp needed
 490 0012 80BD     		pop	{r7, pc}
 491              	.L31:
 492              		.align	2
 493              	.L30:
 494 0014 04003A40 		.word	1077542916
 495 0018 FFFFFEFF 		.word	-65537
 496              		.cfi_endproc
 497              	.LFE7:
 498              		.size	ADC_StopConvert, .-ADC_StopConvert
 499              		.section	.text.ADC_IsEndConversion,"ax",%progbits
 500              		.align	2
 501              		.global	ADC_IsEndConversion
 502              		.code	16
 503              		.thumb_func
 504              		.type	ADC_IsEndConversion, %function
 505              	ADC_IsEndConversion:
 506              	.LFB8:
 390:.\Generated_Source\PSoC4/ADC.c **** 
 391:.\Generated_Source\PSoC4/ADC.c **** 
 392:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 393:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_IsEndConversion
 394:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 395:.\Generated_Source\PSoC4/ADC.c **** *
 396:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 397:.\Generated_Source\PSoC4/ADC.c **** *  Description: Checks for ADC end of conversion for the case one
 398:.\Generated_Source\PSoC4/ADC.c **** *  channel and end of scan for the case of multiple channels. It acts
 399:.\Generated_Source\PSoC4/ADC.c **** *  as a software version of the EOC. This function provides the
ARM GAS  C:\Users\Shahed\AppData\Local\Temp\cc22cuHL.s 			page 17


 400:.\Generated_Source\PSoC4/ADC.c **** *  programmer with two options. In one mode this function
 401:.\Generated_Source\PSoC4/ADC.c **** *  immediately returns with the conversion status. In the other mode,
 402:.\Generated_Source\PSoC4/ADC.c **** *  the function does not return (blocking) until the conversion has
 403:.\Generated_Source\PSoC4/ADC.c **** *  completed.
 404:.\Generated_Source\PSoC4/ADC.c **** *
 405:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 406:.\Generated_Source\PSoC4/ADC.c **** *  ADC_RETURN_STATUS        -> Immediately returns conversion result status
 407:.\Generated_Source\PSoC4/ADC.c **** *  ADC_WAIT_FOR_RESULT      -> Does not return until ADC complete
 408:.\Generated_Source\PSoC4/ADC.c **** *  ADC_RETURN_STATUS_INJ    -> Immediately returns conversion result status
 409:.\Generated_Source\PSoC4/ADC.c **** *                              for injection channel
 410:.\Generated_Source\PSoC4/ADC.c **** *  ADC_WAIT_FOR_RESULT_INJ  -> Does not return until ADC completes injection
 411:.\Generated_Source\PSoC4/ADC.c **** *                              channel conversion
 412:.\Generated_Source\PSoC4/ADC.c **** *
 413:.\Generated_Source\PSoC4/ADC.c **** * Return:
 414:.\Generated_Source\PSoC4/ADC.c **** *  If a non-zero value is returned, the last conversion or scan has completed.
 415:.\Generated_Source\PSoC4/ADC.c **** *  If the returned value is zero, the ADC is still in the process of a scan.
 416:.\Generated_Source\PSoC4/ADC.c **** *
 417:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 418:.\Generated_Source\PSoC4/ADC.c **** uint32 ADC_IsEndConversion(uint32 retMode)
 419:.\Generated_Source\PSoC4/ADC.c **** {
 507              		.loc 1 419 0
 508              		.cfi_startproc
 509 0000 80B5     		push	{r7, lr}
 510              		.cfi_def_cfa_offset 8
 511              		.cfi_offset 7, -8
 512              		.cfi_offset 14, -4
 513 0002 84B0     		sub	sp, sp, #16
 514              		.cfi_def_cfa_offset 24
 515 0004 00AF     		add	r7, sp, #0
 516              		.cfi_def_cfa_register 7
 517 0006 7860     		str	r0, [r7, #4]
 420:.\Generated_Source\PSoC4/ADC.c ****     uint32 status = 0u;
 518              		.loc 1 420 0
 519 0008 0023     		mov	r3, #0
 520 000a FB60     		str	r3, [r7, #12]
 421:.\Generated_Source\PSoC4/ADC.c **** 
 422:.\Generated_Source\PSoC4/ADC.c ****     if((retMode & (ADC_RETURN_STATUS | ADC_WAIT_FOR_RESULT)) != 0u)
 521              		.loc 1 422 0
 522 000c 7A68     		ldr	r2, [r7, #4]
 523 000e 0323     		mov	r3, #3
 524 0010 1340     		and	r3, r2
 525 0012 11D0     		beq	.L33
 526              	.L35:
 423:.\Generated_Source\PSoC4/ADC.c ****     {
 424:.\Generated_Source\PSoC4/ADC.c ****         do
 425:.\Generated_Source\PSoC4/ADC.c ****         {
 426:.\Generated_Source\PSoC4/ADC.c ****             status = ADC_SAR_INTR_REG & ADC_EOS_MASK;
 527              		.loc 1 426 0 discriminator 1
 528 0014 0B4B     		ldr	r3, .L37
 529 0016 1A68     		ldr	r2, [r3]
 530 0018 0123     		mov	r3, #1
 531 001a 1340     		and	r3, r2
 532 001c FB60     		str	r3, [r7, #12]
 427:.\Generated_Source\PSoC4/ADC.c ****         }while((status == 0u) && ((retMode & ADC_WAIT_FOR_RESULT) != 0u));
 533              		.loc 1 427 0 discriminator 1
 534 001e FB68     		ldr	r3, [r7, #12]
 535 0020 002B     		cmp	r3, #0
ARM GAS  C:\Users\Shahed\AppData\Local\Temp\cc22cuHL.s 			page 18


 536 0022 03D1     		bne	.L34
 537 0024 7A68     		ldr	r2, [r7, #4]
 538 0026 0223     		mov	r3, #2
 539 0028 1340     		and	r3, r2
 540 002a F3D1     		bne	.L35
 541              	.L34:
 428:.\Generated_Source\PSoC4/ADC.c **** 
 429:.\Generated_Source\PSoC4/ADC.c ****         if(status != 0u)
 542              		.loc 1 429 0
 543 002c FB68     		ldr	r3, [r7, #12]
 544 002e 002B     		cmp	r3, #0
 545 0030 02D0     		beq	.L33
 430:.\Generated_Source\PSoC4/ADC.c ****         {
 431:.\Generated_Source\PSoC4/ADC.c ****             /* Clear EOS bit */
 432:.\Generated_Source\PSoC4/ADC.c ****             ADC_SAR_INTR_REG = ADC_EOS_MASK;
 546              		.loc 1 432 0
 547 0032 044B     		ldr	r3, .L37
 548 0034 0122     		mov	r2, #1
 549 0036 1A60     		str	r2, [r3]
 550              	.L33:
 433:.\Generated_Source\PSoC4/ADC.c ****         }
 434:.\Generated_Source\PSoC4/ADC.c ****     }
 435:.\Generated_Source\PSoC4/ADC.c **** 
 436:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_INJ_CHANNEL_ENABLED)
 437:.\Generated_Source\PSoC4/ADC.c ****         if((retMode & (ADC_RETURN_STATUS_INJ | ADC_WAIT_FOR_RESULT_INJ)) != 0u)
 438:.\Generated_Source\PSoC4/ADC.c ****         {
 439:.\Generated_Source\PSoC4/ADC.c ****             do
 440:.\Generated_Source\PSoC4/ADC.c ****             {
 441:.\Generated_Source\PSoC4/ADC.c ****                 status |= ADC_SAR_INTR_REG & ADC_INJ_EOC_MASK;
 442:.\Generated_Source\PSoC4/ADC.c ****             }while(((status & ADC_INJ_EOC_MASK) == 0u) &&
 443:.\Generated_Source\PSoC4/ADC.c ****                    ((retMode & ADC_WAIT_FOR_RESULT_INJ) != 0u));
 444:.\Generated_Source\PSoC4/ADC.c **** 
 445:.\Generated_Source\PSoC4/ADC.c ****             if((status & ADC_INJ_EOC_MASK) != 0u)
 446:.\Generated_Source\PSoC4/ADC.c ****             {
 447:.\Generated_Source\PSoC4/ADC.c ****                 /* Clear Injection EOS bit */
 448:.\Generated_Source\PSoC4/ADC.c ****                 ADC_SAR_INTR_REG = ADC_INJ_EOC_MASK;
 449:.\Generated_Source\PSoC4/ADC.c ****             }
 450:.\Generated_Source\PSoC4/ADC.c ****         }
 451:.\Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_INJ_CHANNEL_ENABLED */
 452:.\Generated_Source\PSoC4/ADC.c **** 
 453:.\Generated_Source\PSoC4/ADC.c ****     return (status);
 551              		.loc 1 453 0
 552 0038 FB68     		ldr	r3, [r7, #12]
 454:.\Generated_Source\PSoC4/ADC.c **** }
 553              		.loc 1 454 0
 554 003a 181C     		mov	r0, r3
 555 003c BD46     		mov	sp, r7
 556 003e 04B0     		add	sp, sp, #16
 557              		@ sp needed
 558 0040 80BD     		pop	{r7, pc}
 559              	.L38:
 560 0042 C046     		.align	2
 561              	.L37:
 562 0044 10023A40 		.word	1077543440
 563              		.cfi_endproc
 564              	.LFE8:
 565              		.size	ADC_IsEndConversion, .-ADC_IsEndConversion
ARM GAS  C:\Users\Shahed\AppData\Local\Temp\cc22cuHL.s 			page 19


 566              		.section	.text.ADC_GetResult16,"ax",%progbits
 567              		.align	2
 568              		.global	ADC_GetResult16
 569              		.code	16
 570              		.thumb_func
 571              		.type	ADC_GetResult16, %function
 572              	ADC_GetResult16:
 573              	.LFB9:
 455:.\Generated_Source\PSoC4/ADC.c **** 
 456:.\Generated_Source\PSoC4/ADC.c **** 
 457:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 458:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_GetResult16
 459:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 460:.\Generated_Source\PSoC4/ADC.c **** *
 461:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 462:.\Generated_Source\PSoC4/ADC.c **** *  Gets the data available in the SAR DATA register.
 463:.\Generated_Source\PSoC4/ADC.c **** *
 464:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 465:.\Generated_Source\PSoC4/ADC.c **** *  chan: The ADC channel in which to return the result. The first channel
 466:.\Generated_Source\PSoC4/ADC.c **** *  is 0 and the injection channel if enabled is the number of valid channels.
 467:.\Generated_Source\PSoC4/ADC.c **** *
 468:.\Generated_Source\PSoC4/ADC.c **** * Return:
 469:.\Generated_Source\PSoC4/ADC.c **** *  Returns converted data as a signed 16-bit integer
 470:.\Generated_Source\PSoC4/ADC.c **** *
 471:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 472:.\Generated_Source\PSoC4/ADC.c **** int16 ADC_GetResult16(uint32 chan)
 473:.\Generated_Source\PSoC4/ADC.c **** {
 574              		.loc 1 473 0
 575              		.cfi_startproc
 576 0000 80B5     		push	{r7, lr}
 577              		.cfi_def_cfa_offset 8
 578              		.cfi_offset 7, -8
 579              		.cfi_offset 14, -4
 580 0002 84B0     		sub	sp, sp, #16
 581              		.cfi_def_cfa_offset 24
 582 0004 00AF     		add	r7, sp, #0
 583              		.cfi_def_cfa_register 7
 584 0006 7860     		str	r0, [r7, #4]
 474:.\Generated_Source\PSoC4/ADC.c ****     uint32 result;
 475:.\Generated_Source\PSoC4/ADC.c **** 
 476:.\Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 477:.\Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 585              		.loc 1 477 0
 586 0008 7B68     		ldr	r3, [r7, #4]
 587 000a 002B     		cmp	r3, #0
 588 000c 02D0     		beq	.L40
 589              		.loc 1 477 0 is_stmt 0 discriminator 1
 590 000e 0020     		mov	r0, #0
 591 0010 FFF7FEFF 		bl	CyHalt
 592              	.L40:
 478:.\Generated_Source\PSoC4/ADC.c **** 
 479:.\Generated_Source\PSoC4/ADC.c ****     if(chan < ADC_SEQUENCED_CHANNELS_NUM)
 593              		.loc 1 479 0 is_stmt 1
 594 0014 7B68     		ldr	r3, [r7, #4]
 595 0016 002B     		cmp	r3, #0
 596 0018 08D1     		bne	.L41
 480:.\Generated_Source\PSoC4/ADC.c ****     {
ARM GAS  C:\Users\Shahed\AppData\Local\Temp\cc22cuHL.s 			page 20


 481:.\Generated_Source\PSoC4/ADC.c ****         result = CY_GET_REG32((reg32 *)(ADC_SAR_CHAN_RESULT_IND + (uint32)(chan << 2u))) &
 597              		.loc 1 481 0
 598 001a 7B68     		ldr	r3, [r7, #4]
 599 001c 9B00     		lsl	r3, r3, #2
 600 001e 084A     		ldr	r2, .L44
 601 0020 9B18     		add	r3, r3, r2
 602 0022 1B68     		ldr	r3, [r3]
 603 0024 1B04     		lsl	r3, r3, #16
 604 0026 1B0C     		lsr	r3, r3, #16
 605 0028 FB60     		str	r3, [r7, #12]
 606 002a 01E0     		b	.L42
 607              	.L41:
 482:.\Generated_Source\PSoC4/ADC.c ****                 ADC_RESULT_MASK;
 483:.\Generated_Source\PSoC4/ADC.c ****     }
 484:.\Generated_Source\PSoC4/ADC.c ****     else
 485:.\Generated_Source\PSoC4/ADC.c ****     {
 486:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_INJ_CHANNEL_ENABLED)
 487:.\Generated_Source\PSoC4/ADC.c ****             result = ADC_SAR_INJ_RESULT_REG & ADC_RESULT_MASK;
 488:.\Generated_Source\PSoC4/ADC.c ****         #else
 489:.\Generated_Source\PSoC4/ADC.c ****             result = 0u;
 608              		.loc 1 489 0
 609 002c 0023     		mov	r3, #0
 610 002e FB60     		str	r3, [r7, #12]
 611              	.L42:
 490:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_INJ_CHANNEL_ENABLED */
 491:.\Generated_Source\PSoC4/ADC.c ****     }
 492:.\Generated_Source\PSoC4/ADC.c **** 
 493:.\Generated_Source\PSoC4/ADC.c ****     return ( (int16)result );
 612              		.loc 1 493 0
 613 0030 FB68     		ldr	r3, [r7, #12]
 614 0032 9BB2     		uxth	r3, r3
 615 0034 1BB2     		sxth	r3, r3
 494:.\Generated_Source\PSoC4/ADC.c **** }
 616              		.loc 1 494 0
 617 0036 181C     		mov	r0, r3
 618 0038 BD46     		mov	sp, r7
 619 003a 04B0     		add	sp, sp, #16
 620              		@ sp needed
 621 003c 80BD     		pop	{r7, pc}
 622              	.L45:
 623 003e C046     		.align	2
 624              	.L44:
 625 0040 80013A40 		.word	1077543296
 626              		.cfi_endproc
 627              	.LFE9:
 628              		.size	ADC_GetResult16, .-ADC_GetResult16
 629              		.section	.text.ADC_SetChanMask,"ax",%progbits
 630              		.align	2
 631              		.global	ADC_SetChanMask
 632              		.code	16
 633              		.thumb_func
 634              		.type	ADC_SetChanMask, %function
 635              	ADC_SetChanMask:
 636              	.LFB10:
 495:.\Generated_Source\PSoC4/ADC.c **** 
 496:.\Generated_Source\PSoC4/ADC.c **** 
 497:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
ARM GAS  C:\Users\Shahed\AppData\Local\Temp\cc22cuHL.s 			page 21


 498:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetChanMask
 499:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 500:.\Generated_Source\PSoC4/ADC.c **** *
 501:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 502:.\Generated_Source\PSoC4/ADC.c **** *  Sets the channel enable mask.
 503:.\Generated_Source\PSoC4/ADC.c **** *
 504:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 505:.\Generated_Source\PSoC4/ADC.c **** *  mask: Sets which channels that will be
 506:.\Generated_Source\PSoC4/ADC.c **** *  scanned. Setting bits for channels that do not exist will have no
 507:.\Generated_Source\PSoC4/ADC.c **** *  effect. For example, if only 6 channels were enabled, setting a
 508:.\Generated_Source\PSoC4/ADC.c **** *  mask of 0x0103 would only enable the last two channels (0 and 1).
 509:.\Generated_Source\PSoC4/ADC.c **** *  This API will not enable the injection channel.
 510:.\Generated_Source\PSoC4/ADC.c **** *  Examples: If the component is setup to sequence through 8
 511:.\Generated_Source\PSoC4/ADC.c **** *  channels, a mask of 0x000F would enable channels 0, 1, 2, and 3.
 512:.\Generated_Source\PSoC4/ADC.c **** *
 513:.\Generated_Source\PSoC4/ADC.c **** * Return:
 514:.\Generated_Source\PSoC4/ADC.c **** *  None.
 515:.\Generated_Source\PSoC4/ADC.c **** *
 516:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 517:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetChanMask(uint32 mask)
 518:.\Generated_Source\PSoC4/ADC.c **** {
 637              		.loc 1 518 0
 638              		.cfi_startproc
 639 0000 80B5     		push	{r7, lr}
 640              		.cfi_def_cfa_offset 8
 641              		.cfi_offset 7, -8
 642              		.cfi_offset 14, -4
 643 0002 82B0     		sub	sp, sp, #8
 644              		.cfi_def_cfa_offset 16
 645 0004 00AF     		add	r7, sp, #0
 646              		.cfi_def_cfa_register 7
 647 0006 7860     		str	r0, [r7, #4]
 519:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CHAN_EN_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
 648              		.loc 1 519 0
 649 0008 034B     		ldr	r3, .L47
 650 000a 7968     		ldr	r1, [r7, #4]
 651 000c 0122     		mov	r2, #1
 652 000e 0A40     		and	r2, r1
 653 0010 1A60     		str	r2, [r3]
 520:.\Generated_Source\PSoC4/ADC.c **** }
 654              		.loc 1 520 0
 655 0012 BD46     		mov	sp, r7
 656 0014 02B0     		add	sp, sp, #8
 657              		@ sp needed
 658 0016 80BD     		pop	{r7, pc}
 659              	.L48:
 660              		.align	2
 661              	.L47:
 662 0018 20003A40 		.word	1077542944
 663              		.cfi_endproc
 664              	.LFE10:
 665              		.size	ADC_SetChanMask, .-ADC_SetChanMask
 666              		.section	.text.ADC_SetLowLimit,"ax",%progbits
 667              		.align	2
 668              		.global	ADC_SetLowLimit
 669              		.code	16
 670              		.thumb_func
ARM GAS  C:\Users\Shahed\AppData\Local\Temp\cc22cuHL.s 			page 22


 671              		.type	ADC_SetLowLimit, %function
 672              	ADC_SetLowLimit:
 673              	.LFB11:
 521:.\Generated_Source\PSoC4/ADC.c **** 
 522:.\Generated_Source\PSoC4/ADC.c **** #if(ADC_INJ_CHANNEL_ENABLED)
 523:.\Generated_Source\PSoC4/ADC.c **** 
 524:.\Generated_Source\PSoC4/ADC.c **** 
 525:.\Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 526:.\Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_EnableInjection
 527:.\Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 528:.\Generated_Source\PSoC4/ADC.c ****     *
 529:.\Generated_Source\PSoC4/ADC.c ****     * Summary:
 530:.\Generated_Source\PSoC4/ADC.c ****     *  Enables the injection channel for the next scan only.
 531:.\Generated_Source\PSoC4/ADC.c ****     *
 532:.\Generated_Source\PSoC4/ADC.c ****     * Parameters:
 533:.\Generated_Source\PSoC4/ADC.c ****     *  None.
 534:.\Generated_Source\PSoC4/ADC.c ****     *
 535:.\Generated_Source\PSoC4/ADC.c ****     * Return:
 536:.\Generated_Source\PSoC4/ADC.c ****     *  None.
 537:.\Generated_Source\PSoC4/ADC.c ****     *
 538:.\Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 539:.\Generated_Source\PSoC4/ADC.c ****     void ADC_EnableInjection(void)
 540:.\Generated_Source\PSoC4/ADC.c ****     {
 541:.\Generated_Source\PSoC4/ADC.c ****         ADC_SAR_INJ_CHAN_CONFIG_REG |= ADC_INJ_CHAN_EN;
 542:.\Generated_Source\PSoC4/ADC.c ****     }
 543:.\Generated_Source\PSoC4/ADC.c **** 
 544:.\Generated_Source\PSoC4/ADC.c **** #endif /* ADC_INJ_CHANNEL_ENABLED */
 545:.\Generated_Source\PSoC4/ADC.c **** 
 546:.\Generated_Source\PSoC4/ADC.c **** 
 547:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 548:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetLowLimit
 549:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 550:.\Generated_Source\PSoC4/ADC.c **** *
 551:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 552:.\Generated_Source\PSoC4/ADC.c **** *  Sets the low limit parameter for a limit condition.
 553:.\Generated_Source\PSoC4/ADC.c **** *
 554:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 555:.\Generated_Source\PSoC4/ADC.c **** *  lowLimit: The low limit for a limit condition.
 556:.\Generated_Source\PSoC4/ADC.c **** *
 557:.\Generated_Source\PSoC4/ADC.c **** * Return:
 558:.\Generated_Source\PSoC4/ADC.c **** *  None.
 559:.\Generated_Source\PSoC4/ADC.c **** *
 560:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 561:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetLowLimit(uint32 lowLimit)
 562:.\Generated_Source\PSoC4/ADC.c **** {
 674              		.loc 1 562 0
 675              		.cfi_startproc
 676 0000 80B5     		push	{r7, lr}
 677              		.cfi_def_cfa_offset 8
 678              		.cfi_offset 7, -8
 679              		.cfi_offset 14, -4
 680 0002 82B0     		sub	sp, sp, #8
 681              		.cfi_def_cfa_offset 16
 682 0004 00AF     		add	r7, sp, #0
 683              		.cfi_def_cfa_register 7
 684 0006 7860     		str	r0, [r7, #4]
 563:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG &= (uint32)(~ADC_RANGE_LOW_MASK);
ARM GAS  C:\Users\Shahed\AppData\Local\Temp\cc22cuHL.s 			page 23


 685              		.loc 1 563 0
 686 0008 084B     		ldr	r3, .L50
 687 000a 084A     		ldr	r2, .L50
 688 000c 1268     		ldr	r2, [r2]
 689 000e 120C     		lsr	r2, r2, #16
 690 0010 1204     		lsl	r2, r2, #16
 691 0012 1A60     		str	r2, [r3]
 564:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG |= lowLimit & ADC_RANGE_LOW_MASK;
 692              		.loc 1 564 0
 693 0014 054B     		ldr	r3, .L50
 694 0016 054A     		ldr	r2, .L50
 695 0018 1168     		ldr	r1, [r2]
 696 001a 7A68     		ldr	r2, [r7, #4]
 697 001c 1204     		lsl	r2, r2, #16
 698 001e 120C     		lsr	r2, r2, #16
 699 0020 0A43     		orr	r2, r1
 700 0022 1A60     		str	r2, [r3]
 565:.\Generated_Source\PSoC4/ADC.c **** }
 701              		.loc 1 565 0
 702 0024 BD46     		mov	sp, r7
 703 0026 02B0     		add	sp, sp, #8
 704              		@ sp needed
 705 0028 80BD     		pop	{r7, pc}
 706              	.L51:
 707 002a C046     		.align	2
 708              	.L50:
 709 002c 18003A40 		.word	1077542936
 710              		.cfi_endproc
 711              	.LFE11:
 712              		.size	ADC_SetLowLimit, .-ADC_SetLowLimit
 713              		.section	.text.ADC_SetHighLimit,"ax",%progbits
 714              		.align	2
 715              		.global	ADC_SetHighLimit
 716              		.code	16
 717              		.thumb_func
 718              		.type	ADC_SetHighLimit, %function
 719              	ADC_SetHighLimit:
 720              	.LFB12:
 566:.\Generated_Source\PSoC4/ADC.c **** 
 567:.\Generated_Source\PSoC4/ADC.c **** 
 568:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 569:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetHighLimit
 570:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 571:.\Generated_Source\PSoC4/ADC.c **** *
 572:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 573:.\Generated_Source\PSoC4/ADC.c **** *  Sets the low limit parameter for a limit condition.
 574:.\Generated_Source\PSoC4/ADC.c **** *
 575:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 576:.\Generated_Source\PSoC4/ADC.c **** *  highLimit: The high limit for a limit condition.
 577:.\Generated_Source\PSoC4/ADC.c **** *
 578:.\Generated_Source\PSoC4/ADC.c **** * Return:
 579:.\Generated_Source\PSoC4/ADC.c **** *  None.
 580:.\Generated_Source\PSoC4/ADC.c **** *
 581:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 582:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetHighLimit(uint32 highLimit)
 583:.\Generated_Source\PSoC4/ADC.c **** {
 721              		.loc 1 583 0
ARM GAS  C:\Users\Shahed\AppData\Local\Temp\cc22cuHL.s 			page 24


 722              		.cfi_startproc
 723 0000 80B5     		push	{r7, lr}
 724              		.cfi_def_cfa_offset 8
 725              		.cfi_offset 7, -8
 726              		.cfi_offset 14, -4
 727 0002 82B0     		sub	sp, sp, #8
 728              		.cfi_def_cfa_offset 16
 729 0004 00AF     		add	r7, sp, #0
 730              		.cfi_def_cfa_register 7
 731 0006 7860     		str	r0, [r7, #4]
 584:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG &= (uint32)(~ADC_RANGE_HIGH_MASK);
 732              		.loc 1 584 0
 733 0008 074B     		ldr	r3, .L53
 734 000a 074A     		ldr	r2, .L53
 735 000c 1268     		ldr	r2, [r2]
 736 000e 1204     		lsl	r2, r2, #16
 737 0010 120C     		lsr	r2, r2, #16
 738 0012 1A60     		str	r2, [r3]
 585:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG |= (uint32)(highLimit << ADC_RANGE_HIGH_OFFSET);
 739              		.loc 1 585 0
 740 0014 044B     		ldr	r3, .L53
 741 0016 044A     		ldr	r2, .L53
 742 0018 1168     		ldr	r1, [r2]
 743 001a 7A68     		ldr	r2, [r7, #4]
 744 001c 1204     		lsl	r2, r2, #16
 745 001e 0A43     		orr	r2, r1
 746 0020 1A60     		str	r2, [r3]
 586:.\Generated_Source\PSoC4/ADC.c **** }
 747              		.loc 1 586 0
 748 0022 BD46     		mov	sp, r7
 749 0024 02B0     		add	sp, sp, #8
 750              		@ sp needed
 751 0026 80BD     		pop	{r7, pc}
 752              	.L54:
 753              		.align	2
 754              	.L53:
 755 0028 18003A40 		.word	1077542936
 756              		.cfi_endproc
 757              	.LFE12:
 758              		.size	ADC_SetHighLimit, .-ADC_SetHighLimit
 759              		.section	.text.ADC_SetLimitMask,"ax",%progbits
 760              		.align	2
 761              		.global	ADC_SetLimitMask
 762              		.code	16
 763              		.thumb_func
 764              		.type	ADC_SetLimitMask, %function
 765              	ADC_SetLimitMask:
 766              	.LFB13:
 587:.\Generated_Source\PSoC4/ADC.c **** 
 588:.\Generated_Source\PSoC4/ADC.c **** 
 589:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 590:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetLimitMask
 591:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 592:.\Generated_Source\PSoC4/ADC.c **** *
 593:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 594:.\Generated_Source\PSoC4/ADC.c **** *  Sets the channel limit condition mask.
 595:.\Generated_Source\PSoC4/ADC.c **** *
ARM GAS  C:\Users\Shahed\AppData\Local\Temp\cc22cuHL.s 			page 25


 596:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 597:.\Generated_Source\PSoC4/ADC.c **** *  mask: Sets which channels that may cause a
 598:.\Generated_Source\PSoC4/ADC.c **** *  limit condition interrupt. Setting bits for channels that do not exist
 599:.\Generated_Source\PSoC4/ADC.c **** *  will have no effect. For example, if only 6 channels were enabled,
 600:.\Generated_Source\PSoC4/ADC.c **** *  setting a mask of 0x0103 would only enable the last two channels (0 and 1).
 601:.\Generated_Source\PSoC4/ADC.c **** *
 602:.\Generated_Source\PSoC4/ADC.c **** * Return:
 603:.\Generated_Source\PSoC4/ADC.c **** *  None.
 604:.\Generated_Source\PSoC4/ADC.c **** *
 605:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 606:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetLimitMask(uint32 mask)
 607:.\Generated_Source\PSoC4/ADC.c **** {
 767              		.loc 1 607 0
 768              		.cfi_startproc
 769 0000 80B5     		push	{r7, lr}
 770              		.cfi_def_cfa_offset 8
 771              		.cfi_offset 7, -8
 772              		.cfi_offset 14, -4
 773 0002 82B0     		sub	sp, sp, #8
 774              		.cfi_def_cfa_offset 16
 775 0004 00AF     		add	r7, sp, #0
 776              		.cfi_def_cfa_register 7
 777 0006 7860     		str	r0, [r7, #4]
 608:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_INTR_MASK_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
 778              		.loc 1 608 0
 779 0008 034B     		ldr	r3, .L56
 780 000a 7968     		ldr	r1, [r7, #4]
 781 000c 0122     		mov	r2, #1
 782 000e 0A40     		and	r2, r1
 783 0010 1A60     		str	r2, [r3]
 609:.\Generated_Source\PSoC4/ADC.c **** }
 784              		.loc 1 609 0
 785 0012 BD46     		mov	sp, r7
 786 0014 02B0     		add	sp, sp, #8
 787              		@ sp needed
 788 0016 80BD     		pop	{r7, pc}
 789              	.L57:
 790              		.align	2
 791              	.L56:
 792 0018 38023A40 		.word	1077543480
 793              		.cfi_endproc
 794              	.LFE13:
 795              		.size	ADC_SetLimitMask, .-ADC_SetLimitMask
 796              		.section	.text.ADC_SetSatMask,"ax",%progbits
 797              		.align	2
 798              		.global	ADC_SetSatMask
 799              		.code	16
 800              		.thumb_func
 801              		.type	ADC_SetSatMask, %function
 802              	ADC_SetSatMask:
 803              	.LFB14:
 610:.\Generated_Source\PSoC4/ADC.c **** 
 611:.\Generated_Source\PSoC4/ADC.c **** 
 612:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 613:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetSatMask
 614:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 615:.\Generated_Source\PSoC4/ADC.c **** *
ARM GAS  C:\Users\Shahed\AppData\Local\Temp\cc22cuHL.s 			page 26


 616:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 617:.\Generated_Source\PSoC4/ADC.c **** *  Sets the channel saturation event mask.
 618:.\Generated_Source\PSoC4/ADC.c **** *
 619:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 620:.\Generated_Source\PSoC4/ADC.c **** *  mask: Sets which channels that may cause a
 621:.\Generated_Source\PSoC4/ADC.c **** *  saturation event interrupt. Setting bits for channels that do not exist
 622:.\Generated_Source\PSoC4/ADC.c **** *  will have no effect. For example, if only 8 channels were enabled,
 623:.\Generated_Source\PSoC4/ADC.c **** *  setting a mask of 0x01C0 would only enable two channels (6 and 7).
 624:.\Generated_Source\PSoC4/ADC.c **** *
 625:.\Generated_Source\PSoC4/ADC.c **** * Return:
 626:.\Generated_Source\PSoC4/ADC.c **** *  None.
 627:.\Generated_Source\PSoC4/ADC.c **** *
 628:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 629:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetSatMask(uint32 mask)
 630:.\Generated_Source\PSoC4/ADC.c **** {
 804              		.loc 1 630 0
 805              		.cfi_startproc
 806 0000 80B5     		push	{r7, lr}
 807              		.cfi_def_cfa_offset 8
 808              		.cfi_offset 7, -8
 809              		.cfi_offset 14, -4
 810 0002 82B0     		sub	sp, sp, #8
 811              		.cfi_def_cfa_offset 16
 812 0004 00AF     		add	r7, sp, #0
 813              		.cfi_def_cfa_register 7
 814 0006 7860     		str	r0, [r7, #4]
 631:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SATURATE_INTR_MASK_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
 815              		.loc 1 631 0
 816 0008 034B     		ldr	r3, .L59
 817 000a 7968     		ldr	r1, [r7, #4]
 818 000c 0122     		mov	r2, #1
 819 000e 0A40     		and	r2, r1
 820 0010 1A60     		str	r2, [r3]
 632:.\Generated_Source\PSoC4/ADC.c **** }
 821              		.loc 1 632 0
 822 0012 BD46     		mov	sp, r7
 823 0014 02B0     		add	sp, sp, #8
 824              		@ sp needed
 825 0016 80BD     		pop	{r7, pc}
 826              	.L60:
 827              		.align	2
 828              	.L59:
 829 0018 28023A40 		.word	1077543464
 830              		.cfi_endproc
 831              	.LFE14:
 832              		.size	ADC_SetSatMask, .-ADC_SetSatMask
 833              		.section	.text.ADC_SetOffset,"ax",%progbits
 834              		.align	2
 835              		.global	ADC_SetOffset
 836              		.code	16
 837              		.thumb_func
 838              		.type	ADC_SetOffset, %function
 839              	ADC_SetOffset:
 840              	.LFB15:
 633:.\Generated_Source\PSoC4/ADC.c **** 
 634:.\Generated_Source\PSoC4/ADC.c **** 
 635:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
ARM GAS  C:\Users\Shahed\AppData\Local\Temp\cc22cuHL.s 			page 27


 636:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetOffset
 637:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 638:.\Generated_Source\PSoC4/ADC.c **** *
 639:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 640:.\Generated_Source\PSoC4/ADC.c **** *   Description: Sets the ADC offset which is used by the functions
 641:.\Generated_Source\PSoC4/ADC.c **** *   ADC_CountsTo_uVolts, ADC_CountsTo_mVolts and ADC_CountsTo_Volts
 642:.\Generated_Source\PSoC4/ADC.c **** *   to substract the offset from the given reading
 643:.\Generated_Source\PSoC4/ADC.c **** *   before calculating the voltage conversion.
 644:.\Generated_Source\PSoC4/ADC.c **** *
 645:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 646:.\Generated_Source\PSoC4/ADC.c **** *  chan: ADC channel number.
 647:.\Generated_Source\PSoC4/ADC.c **** *  offset: This value is a measured value when the
 648:.\Generated_Source\PSoC4/ADC.c **** *          inputs are shorted or connected to the same input voltage.
 649:.\Generated_Source\PSoC4/ADC.c **** *
 650:.\Generated_Source\PSoC4/ADC.c **** * Return:
 651:.\Generated_Source\PSoC4/ADC.c **** *  None.
 652:.\Generated_Source\PSoC4/ADC.c **** *
 653:.\Generated_Source\PSoC4/ADC.c **** * Global variables:
 654:.\Generated_Source\PSoC4/ADC.c **** *  ADC_Offset:  Modified to set the user provided offset.
 655:.\Generated_Source\PSoC4/ADC.c **** *
 656:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 657:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetOffset(uint32 chan, int16 offset)
 658:.\Generated_Source\PSoC4/ADC.c **** {
 841              		.loc 1 658 0
 842              		.cfi_startproc
 843 0000 80B5     		push	{r7, lr}
 844              		.cfi_def_cfa_offset 8
 845              		.cfi_offset 7, -8
 846              		.cfi_offset 14, -4
 847 0002 82B0     		sub	sp, sp, #8
 848              		.cfi_def_cfa_offset 16
 849 0004 00AF     		add	r7, sp, #0
 850              		.cfi_def_cfa_register 7
 851 0006 7860     		str	r0, [r7, #4]
 852 0008 0A1C     		mov	r2, r1
 853 000a BB1C     		add	r3, r7, #2
 854 000c 1A80     		strh	r2, [r3]
 659:.\Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 660:.\Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 855              		.loc 1 660 0
 856 000e 7B68     		ldr	r3, [r7, #4]
 857 0010 002B     		cmp	r3, #0
 858 0012 02D0     		beq	.L62
 859              		.loc 1 660 0 is_stmt 0 discriminator 1
 860 0014 0020     		mov	r0, #0
 861 0016 FFF7FEFF 		bl	CyHalt
 862              	.L62:
 661:.\Generated_Source\PSoC4/ADC.c **** 
 662:.\Generated_Source\PSoC4/ADC.c ****     ADC_offset[chan] = offset;
 863              		.loc 1 662 0 is_stmt 1
 864 001a 044B     		ldr	r3, .L63
 865 001c 7A68     		ldr	r2, [r7, #4]
 866 001e 5200     		lsl	r2, r2, #1
 867 0020 B91C     		add	r1, r7, #2
 868 0022 0988     		ldrh	r1, [r1]
 869 0024 D152     		strh	r1, [r2, r3]
 663:.\Generated_Source\PSoC4/ADC.c **** }
ARM GAS  C:\Users\Shahed\AppData\Local\Temp\cc22cuHL.s 			page 28


 870              		.loc 1 663 0
 871 0026 BD46     		mov	sp, r7
 872 0028 02B0     		add	sp, sp, #8
 873              		@ sp needed
 874 002a 80BD     		pop	{r7, pc}
 875              	.L64:
 876              		.align	2
 877              	.L63:
 878 002c 00000000 		.word	ADC_offset
 879              		.cfi_endproc
 880              	.LFE15:
 881              		.size	ADC_SetOffset, .-ADC_SetOffset
 882              		.section	.text.ADC_SetGain,"ax",%progbits
 883              		.align	2
 884              		.global	ADC_SetGain
 885              		.code	16
 886              		.thumb_func
 887              		.type	ADC_SetGain, %function
 888              	ADC_SetGain:
 889              	.LFB16:
 664:.\Generated_Source\PSoC4/ADC.c **** 
 665:.\Generated_Source\PSoC4/ADC.c **** 
 666:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 667:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetGain
 668:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 669:.\Generated_Source\PSoC4/ADC.c **** *
 670:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 671:.\Generated_Source\PSoC4/ADC.c **** *  Description: Sets the ADC gain in counts per 10 volt for the voltage
 672:.\Generated_Source\PSoC4/ADC.c **** *  conversion functions below. This value is set by default by the
 673:.\Generated_Source\PSoC4/ADC.c **** *  reference and input range settings. It should only be used to further
 674:.\Generated_Source\PSoC4/ADC.c **** *  calibrate the ADC with a known input or if an external reference is
 675:.\Generated_Source\PSoC4/ADC.c **** *  used. Affects the ADC_CountsTo_uVolts, ADC_CountsTo_mVolts
 676:.\Generated_Source\PSoC4/ADC.c **** *  and ADC_CountsTo_Volts functions by supplying the correct
 677:.\Generated_Source\PSoC4/ADC.c **** *  conversion between ADC counts and voltage.
 678:.\Generated_Source\PSoC4/ADC.c **** *
 679:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 680:.\Generated_Source\PSoC4/ADC.c **** *  chan: ADC channel number.
 681:.\Generated_Source\PSoC4/ADC.c **** *  adcGain: ADC gain in counts per 10 volts.
 682:.\Generated_Source\PSoC4/ADC.c **** *
 683:.\Generated_Source\PSoC4/ADC.c **** * Return:
 684:.\Generated_Source\PSoC4/ADC.c **** *  None.
 685:.\Generated_Source\PSoC4/ADC.c **** *
 686:.\Generated_Source\PSoC4/ADC.c **** * Global variables:
 687:.\Generated_Source\PSoC4/ADC.c **** *  ADC_CountsPer10Volt:  modified to set the ADC gain in counts
 688:.\Generated_Source\PSoC4/ADC.c **** *   per 10 volt.
 689:.\Generated_Source\PSoC4/ADC.c **** *
 690:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 691:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetGain(uint32 chan, int32 adcGain)
 692:.\Generated_Source\PSoC4/ADC.c **** {
 890              		.loc 1 692 0
 891              		.cfi_startproc
 892 0000 80B5     		push	{r7, lr}
 893              		.cfi_def_cfa_offset 8
 894              		.cfi_offset 7, -8
 895              		.cfi_offset 14, -4
 896 0002 82B0     		sub	sp, sp, #8
 897              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\Shahed\AppData\Local\Temp\cc22cuHL.s 			page 29


 898 0004 00AF     		add	r7, sp, #0
 899              		.cfi_def_cfa_register 7
 900 0006 7860     		str	r0, [r7, #4]
 901 0008 3960     		str	r1, [r7]
 693:.\Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 694:.\Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 902              		.loc 1 694 0
 903 000a 7B68     		ldr	r3, [r7, #4]
 904 000c 002B     		cmp	r3, #0
 905 000e 02D0     		beq	.L66
 906              		.loc 1 694 0 is_stmt 0 discriminator 1
 907 0010 0020     		mov	r0, #0
 908 0012 FFF7FEFF 		bl	CyHalt
 909              	.L66:
 695:.\Generated_Source\PSoC4/ADC.c **** 
 696:.\Generated_Source\PSoC4/ADC.c ****     ADC_countsPer10Volt[chan] = adcGain;
 910              		.loc 1 696 0 is_stmt 1
 911 0016 044B     		ldr	r3, .L67
 912 0018 7A68     		ldr	r2, [r7, #4]
 913 001a 9200     		lsl	r2, r2, #2
 914 001c 3968     		ldr	r1, [r7]
 915 001e D150     		str	r1, [r2, r3]
 697:.\Generated_Source\PSoC4/ADC.c **** }
 916              		.loc 1 697 0
 917 0020 BD46     		mov	sp, r7
 918 0022 02B0     		add	sp, sp, #8
 919              		@ sp needed
 920 0024 80BD     		pop	{r7, pc}
 921              	.L68:
 922 0026 C046     		.align	2
 923              	.L67:
 924 0028 00000000 		.word	ADC_countsPer10Volt
 925              		.cfi_endproc
 926              	.LFE16:
 927              		.size	ADC_SetGain, .-ADC_SetGain
 928              		.section	.text.ADC_CountsTo_mVolts,"ax",%progbits
 929              		.align	2
 930              		.global	ADC_CountsTo_mVolts
 931              		.code	16
 932              		.thumb_func
 933              		.type	ADC_CountsTo_mVolts, %function
 934              	ADC_CountsTo_mVolts:
 935              	.LFB17:
 698:.\Generated_Source\PSoC4/ADC.c **** 
 699:.\Generated_Source\PSoC4/ADC.c **** 
 700:.\Generated_Source\PSoC4/ADC.c **** #if(ADC_DEFAULT_JUSTIFICATION_SEL == ADC__RIGHT)
 701:.\Generated_Source\PSoC4/ADC.c **** 
 702:.\Generated_Source\PSoC4/ADC.c **** 
 703:.\Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 704:.\Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_CountsTo_mVolts
 705:.\Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 706:.\Generated_Source\PSoC4/ADC.c ****     *
 707:.\Generated_Source\PSoC4/ADC.c ****     * Summary:
 708:.\Generated_Source\PSoC4/ADC.c ****     *  This function converts ADC counts to mVolts
 709:.\Generated_Source\PSoC4/ADC.c ****     *  This function is not available when left data format justification selected.
 710:.\Generated_Source\PSoC4/ADC.c ****     *
 711:.\Generated_Source\PSoC4/ADC.c ****     * Parameters:
ARM GAS  C:\Users\Shahed\AppData\Local\Temp\cc22cuHL.s 			page 30


 712:.\Generated_Source\PSoC4/ADC.c ****     *  chan: The ADC channel number.
 713:.\Generated_Source\PSoC4/ADC.c ****     *  adcCounts: Result from the ADC conversion
 714:.\Generated_Source\PSoC4/ADC.c ****     *
 715:.\Generated_Source\PSoC4/ADC.c ****     * Return:
 716:.\Generated_Source\PSoC4/ADC.c ****     *  Results in mVolts
 717:.\Generated_Source\PSoC4/ADC.c ****     *
 718:.\Generated_Source\PSoC4/ADC.c ****     * Global variables:
 719:.\Generated_Source\PSoC4/ADC.c ****     *  ADC_countsPer10Volt:  used to convert ADC counts to mVolts.
 720:.\Generated_Source\PSoC4/ADC.c ****     *  ADC_Offset:  Used as the offset while converting ADC counts
 721:.\Generated_Source\PSoC4/ADC.c ****     *   to mVolts.
 722:.\Generated_Source\PSoC4/ADC.c ****     *
 723:.\Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 724:.\Generated_Source\PSoC4/ADC.c ****     int16 ADC_CountsTo_mVolts(uint32 chan, int16 adcCounts)
 725:.\Generated_Source\PSoC4/ADC.c ****     {
 936              		.loc 1 725 0
 937              		.cfi_startproc
 938 0000 80B5     		push	{r7, lr}
 939              		.cfi_def_cfa_offset 8
 940              		.cfi_offset 7, -8
 941              		.cfi_offset 14, -4
 942 0002 84B0     		sub	sp, sp, #16
 943              		.cfi_def_cfa_offset 24
 944 0004 00AF     		add	r7, sp, #0
 945              		.cfi_def_cfa_register 7
 946 0006 7860     		str	r0, [r7, #4]
 947 0008 0A1C     		mov	r2, r1
 948 000a BB1C     		add	r3, r7, #2
 949 000c 1A80     		strh	r2, [r3]
 726:.\Generated_Source\PSoC4/ADC.c ****         int16 mVolts;
 727:.\Generated_Source\PSoC4/ADC.c **** 
 728:.\Generated_Source\PSoC4/ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 729:.\Generated_Source\PSoC4/ADC.c ****         CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 950              		.loc 1 729 0
 951 000e 7B68     		ldr	r3, [r7, #4]
 952 0010 002B     		cmp	r3, #0
 953 0012 02D0     		beq	.L70
 954              		.loc 1 729 0 is_stmt 0 discriminator 1
 955 0014 0020     		mov	r0, #0
 956 0016 FFF7FEFF 		bl	CyHalt
 957              	.L70:
 730:.\Generated_Source\PSoC4/ADC.c **** 
 731:.\Generated_Source\PSoC4/ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 732:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE)
 733:.\Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chan] & ADC_AVERAGING_EN) != 0u)
 734:.\Generated_Source\PSoC4/ADC.c ****             {
 735:.\Generated_Source\PSoC4/ADC.c ****                 adcCounts /= ADC_DEFAULT_AVG_SAMPLES_DIV;
 736:.\Generated_Source\PSoC4/ADC.c ****             }
 737:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE */
 738:.\Generated_Source\PSoC4/ADC.c **** 
 739:.\Generated_Source\PSoC4/ADC.c ****         /* Subtract ADC offset */
 740:.\Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 958              		.loc 1 740 0 is_stmt 1
 959 001a BB1C     		add	r3, r7, #2
 960 001c 1A88     		ldrh	r2, [r3]
 961 001e 1E4B     		ldr	r3, .L76
 962 0020 7968     		ldr	r1, [r7, #4]
 963 0022 4900     		lsl	r1, r1, #1
ARM GAS  C:\Users\Shahed\AppData\Local\Temp\cc22cuHL.s 			page 31


 964 0024 CB5A     		ldrh	r3, [r1, r3]
 965 0026 9BB2     		uxth	r3, r3
 966 0028 9BB2     		uxth	r3, r3
 967 002a D31A     		sub	r3, r2, r3
 968 002c 9AB2     		uxth	r2, r3
 969 002e BB1C     		add	r3, r7, #2
 970 0030 1A80     		strh	r2, [r3]
 741:.\Generated_Source\PSoC4/ADC.c **** 
 742:.\Generated_Source\PSoC4/ADC.c ****         mVolts = (int16)((((int32)adcCounts * ADC_10MV_COUNTS) + ( (adcCounts > 0) ?
 971              		.loc 1 742 0
 972 0032 BB1C     		add	r3, r7, #2
 973 0034 0021     		mov	r1, #0
 974 0036 5B5E     		ldrsh	r3, [r3, r1]
 975 0038 184A     		ldr	r2, .L76+4
 976 003a 5A43     		mul	r2, r3
 743:.\Generated_Source\PSoC4/ADC.c ****                  (ADC_countsPer10Volt[chan] / 2) : (-(ADC_countsPer10Volt[chan] / 2)) ))
 977              		.loc 1 743 0
 978 003c BB1C     		add	r3, r7, #2
 979 003e 0021     		mov	r1, #0
 980 0040 5B5E     		ldrsh	r3, [r3, r1]
 981 0042 002B     		cmp	r3, #0
 982 0044 08DD     		ble	.L71
 983              		.loc 1 743 0 is_stmt 0 discriminator 1
 984 0046 164B     		ldr	r3, .L76+8
 985 0048 7968     		ldr	r1, [r7, #4]
 986 004a 8900     		lsl	r1, r1, #2
 987 004c CB58     		ldr	r3, [r1, r3]
 988 004e 002B     		cmp	r3, #0
 989 0050 00DA     		bge	.L72
 990 0052 0133     		add	r3, r3, #1
 991              	.L72:
 992 0054 5B10     		asr	r3, r3, #1
 993 0056 08E0     		b	.L73
 994              	.L71:
 995              		.loc 1 743 0 discriminator 2
 996 0058 114B     		ldr	r3, .L76+8
 997 005a 7968     		ldr	r1, [r7, #4]
 998 005c 8900     		lsl	r1, r1, #2
 999 005e CB58     		ldr	r3, [r1, r3]
 1000 0060 002B     		cmp	r3, #0
 1001 0062 00DA     		bge	.L74
 1002 0064 0133     		add	r3, r3, #1
 1003              	.L74:
 1004 0066 5B10     		asr	r3, r3, #1
 1005 0068 5B42     		neg	r3, r3
 1006              	.L73:
 742:.\Generated_Source\PSoC4/ADC.c ****         mVolts = (int16)((((int32)adcCounts * ADC_10MV_COUNTS) + ( (adcCounts > 0) ?
 1007              		.loc 1 742 0 is_stmt 1
 1008 006a D218     		add	r2, r2, r3
 744:.\Generated_Source\PSoC4/ADC.c ****                  / ADC_countsPer10Volt[chan]);
 1009              		.loc 1 744 0
 1010 006c 0C4B     		ldr	r3, .L76+8
 1011 006e 7968     		ldr	r1, [r7, #4]
 1012 0070 8900     		lsl	r1, r1, #2
 1013 0072 CB58     		ldr	r3, [r1, r3]
 1014 0074 101C     		mov	r0, r2
 1015 0076 191C     		mov	r1, r3
ARM GAS  C:\Users\Shahed\AppData\Local\Temp\cc22cuHL.s 			page 32


 1016 0078 FFF7FEFF 		bl	__aeabi_idiv
 1017 007c 031C     		mov	r3, r0
 1018 007e 1A1C     		mov	r2, r3
 742:.\Generated_Source\PSoC4/ADC.c ****         mVolts = (int16)((((int32)adcCounts * ADC_10MV_COUNTS) + ( (adcCounts > 0) ?
 1019              		.loc 1 742 0
 1020 0080 3B1C     		mov	r3, r7
 1021 0082 0E33     		add	r3, r3, #14
 1022 0084 1A80     		strh	r2, [r3]
 745:.\Generated_Source\PSoC4/ADC.c **** 
 746:.\Generated_Source\PSoC4/ADC.c ****         return( mVolts );
 1023              		.loc 1 746 0
 1024 0086 3B1C     		mov	r3, r7
 1025 0088 0E33     		add	r3, r3, #14
 1026 008a 1B88     		ldrh	r3, [r3]
 1027 008c 1BB2     		sxth	r3, r3
 747:.\Generated_Source\PSoC4/ADC.c ****     }
 1028              		.loc 1 747 0
 1029 008e 181C     		mov	r0, r3
 1030 0090 BD46     		mov	sp, r7
 1031 0092 04B0     		add	sp, sp, #16
 1032              		@ sp needed
 1033 0094 80BD     		pop	{r7, pc}
 1034              	.L77:
 1035 0096 C046     		.align	2
 1036              	.L76:
 1037 0098 00000000 		.word	ADC_offset
 1038 009c 10270000 		.word	10000
 1039 00a0 00000000 		.word	ADC_countsPer10Volt
 1040              		.cfi_endproc
 1041              	.LFE17:
 1042              		.size	ADC_CountsTo_mVolts, .-ADC_CountsTo_mVolts
 1043              		.global	__aeabi_lmul
 1044              		.global	__aeabi_ldivmod
 1045              		.section	.text.ADC_CountsTo_uVolts,"ax",%progbits
 1046              		.align	2
 1047              		.global	ADC_CountsTo_uVolts
 1048              		.code	16
 1049              		.thumb_func
 1050              		.type	ADC_CountsTo_uVolts, %function
 1051              	ADC_CountsTo_uVolts:
 1052              	.LFB18:
 748:.\Generated_Source\PSoC4/ADC.c **** 
 749:.\Generated_Source\PSoC4/ADC.c **** 
 750:.\Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 751:.\Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_CountsTo_uVolts
 752:.\Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 753:.\Generated_Source\PSoC4/ADC.c ****     *
 754:.\Generated_Source\PSoC4/ADC.c ****     * Summary:
 755:.\Generated_Source\PSoC4/ADC.c ****     *  This function converts ADC counts to micro Volts
 756:.\Generated_Source\PSoC4/ADC.c ****     *  This function is not available when left data format justification selected.
 757:.\Generated_Source\PSoC4/ADC.c ****     *
 758:.\Generated_Source\PSoC4/ADC.c ****     * Parameters:
 759:.\Generated_Source\PSoC4/ADC.c ****     *  chan: The ADC channel number.
 760:.\Generated_Source\PSoC4/ADC.c ****     *  adcCounts: Result from the ADC conversion
 761:.\Generated_Source\PSoC4/ADC.c ****     *
 762:.\Generated_Source\PSoC4/ADC.c ****     * Return:
 763:.\Generated_Source\PSoC4/ADC.c ****     *  Results in uVolts
ARM GAS  C:\Users\Shahed\AppData\Local\Temp\cc22cuHL.s 			page 33


 764:.\Generated_Source\PSoC4/ADC.c ****     *
 765:.\Generated_Source\PSoC4/ADC.c ****     * Global variables:
 766:.\Generated_Source\PSoC4/ADC.c ****     *  ADC_countsPer10Volt:  used to convert ADC counts to uVolts.
 767:.\Generated_Source\PSoC4/ADC.c ****     *  ADC_Offset:  Used as the offset while converting ADC counts
 768:.\Generated_Source\PSoC4/ADC.c ****     *   to mVolts.
 769:.\Generated_Source\PSoC4/ADC.c ****     *
 770:.\Generated_Source\PSoC4/ADC.c ****     * Theory:
 771:.\Generated_Source\PSoC4/ADC.c ****     *  Care must be taken to not exceed the maximum value for a 31 bit signed
 772:.\Generated_Source\PSoC4/ADC.c ****     *  number in the conversion to uVolts and at the same time not loose
 773:.\Generated_Source\PSoC4/ADC.c ****     *  resolution.
 774:.\Generated_Source\PSoC4/ADC.c ****     *  To convert adcCounts to microVolts it is required to be multiplied
 775:.\Generated_Source\PSoC4/ADC.c ****     *  on 10 million and later divide on gain in counts per 10V.
 776:.\Generated_Source\PSoC4/ADC.c ****     *
 777:.\Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 778:.\Generated_Source\PSoC4/ADC.c ****     int32 ADC_CountsTo_uVolts(uint32 chan, int16 adcCounts)
 779:.\Generated_Source\PSoC4/ADC.c ****     {
 1053              		.loc 1 779 0
 1054              		.cfi_startproc
 1055 0000 B0B5     		push	{r4, r5, r7, lr}
 1056              		.cfi_def_cfa_offset 16
 1057              		.cfi_offset 4, -16
 1058              		.cfi_offset 5, -12
 1059              		.cfi_offset 7, -8
 1060              		.cfi_offset 14, -4
 1061 0002 86B0     		sub	sp, sp, #24
 1062              		.cfi_def_cfa_offset 40
 1063 0004 00AF     		add	r7, sp, #0
 1064              		.cfi_def_cfa_register 7
 1065 0006 F860     		str	r0, [r7, #12]
 1066 0008 0A1C     		mov	r2, r1
 1067 000a 3B1C     		mov	r3, r7
 1068 000c 0A33     		add	r3, r3, #10
 1069 000e 1A80     		strh	r2, [r3]
 780:.\Generated_Source\PSoC4/ADC.c ****         int64 uVolts;
 781:.\Generated_Source\PSoC4/ADC.c **** 
 782:.\Generated_Source\PSoC4/ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 783:.\Generated_Source\PSoC4/ADC.c ****         CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 1070              		.loc 1 783 0
 1071 0010 FB68     		ldr	r3, [r7, #12]
 1072 0012 002B     		cmp	r3, #0
 1073 0014 02D0     		beq	.L79
 1074              		.loc 1 783 0 is_stmt 0 discriminator 1
 1075 0016 0020     		mov	r0, #0
 1076 0018 FFF7FEFF 		bl	CyHalt
 1077              	.L79:
 784:.\Generated_Source\PSoC4/ADC.c **** 
 785:.\Generated_Source\PSoC4/ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 786:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE)
 787:.\Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chan] & ADC_AVERAGING_EN) != 0u)
 788:.\Generated_Source\PSoC4/ADC.c ****             {
 789:.\Generated_Source\PSoC4/ADC.c ****                 adcCounts /= ADC_DEFAULT_AVG_SAMPLES_DIV;
 790:.\Generated_Source\PSoC4/ADC.c ****             }
 791:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE */
 792:.\Generated_Source\PSoC4/ADC.c **** 
 793:.\Generated_Source\PSoC4/ADC.c ****         /* Subtract ADC offset */
 794:.\Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 1078              		.loc 1 794 0 is_stmt 1
ARM GAS  C:\Users\Shahed\AppData\Local\Temp\cc22cuHL.s 			page 34


 1079 001c 3B1C     		mov	r3, r7
 1080 001e 0A33     		add	r3, r3, #10
 1081 0020 1A88     		ldrh	r2, [r3]
 1082 0022 1B4B     		ldr	r3, .L81+8
 1083 0024 F968     		ldr	r1, [r7, #12]
 1084 0026 4900     		lsl	r1, r1, #1
 1085 0028 CB5A     		ldrh	r3, [r1, r3]
 1086 002a 9BB2     		uxth	r3, r3
 1087 002c 9BB2     		uxth	r3, r3
 1088 002e D31A     		sub	r3, r2, r3
 1089 0030 9AB2     		uxth	r2, r3
 1090 0032 3B1C     		mov	r3, r7
 1091 0034 0A33     		add	r3, r3, #10
 1092 0036 1A80     		strh	r2, [r3]
 795:.\Generated_Source\PSoC4/ADC.c **** 
 796:.\Generated_Source\PSoC4/ADC.c ****         uVolts = ((int64)adcCounts * ADC_10UV_COUNTS) / ADC_countsPer10Volt[chan];
 1093              		.loc 1 796 0
 1094 0038 3B1C     		mov	r3, r7
 1095 003a 0A33     		add	r3, r3, #10
 1096 003c 1B88     		ldrh	r3, [r3]
 1097 003e 1BB2     		sxth	r3, r3
 1098 0040 3B60     		str	r3, [r7]
 1099 0042 DB17     		asr	r3, r3, #31
 1100 0044 7B60     		str	r3, [r7, #4]
 1101 0046 3868     		ldr	r0, [r7]
 1102 0048 7968     		ldr	r1, [r7, #4]
 1103 004a 104B     		ldr	r3, .L81+4
 1104 004c 0E4A     		ldr	r2, .L81
 1105 004e FFF7FEFF 		bl	__aeabi_lmul
 1106 0052 021C     		mov	r2, r0
 1107 0054 0B1C     		mov	r3, r1
 1108 0056 0F49     		ldr	r1, .L81+12
 1109 0058 F868     		ldr	r0, [r7, #12]
 1110 005a 8000     		lsl	r0, r0, #2
 1111 005c 4158     		ldr	r1, [r0, r1]
 1112 005e 0C1C     		mov	r4, r1
 1113 0060 C917     		asr	r1, r1, #31
 1114 0062 0D1C     		mov	r5, r1
 1115 0064 101C     		mov	r0, r2
 1116 0066 191C     		mov	r1, r3
 1117 0068 221C     		mov	r2, r4
 1118 006a 2B1C     		mov	r3, r5
 1119 006c FFF7FEFF 		bl	__aeabi_ldivmod
 1120 0070 031C     		mov	r3, r0
 1121 0072 0C1C     		mov	r4, r1
 1122 0074 3B61     		str	r3, [r7, #16]
 1123 0076 7C61     		str	r4, [r7, #20]
 797:.\Generated_Source\PSoC4/ADC.c **** 
 798:.\Generated_Source\PSoC4/ADC.c ****         return( (int32)uVolts );
 1124              		.loc 1 798 0
 1125 0078 3B69     		ldr	r3, [r7, #16]
 799:.\Generated_Source\PSoC4/ADC.c ****     }
 1126              		.loc 1 799 0
 1127 007a 181C     		mov	r0, r3
 1128 007c BD46     		mov	sp, r7
 1129 007e 06B0     		add	sp, sp, #24
 1130              		@ sp needed
ARM GAS  C:\Users\Shahed\AppData\Local\Temp\cc22cuHL.s 			page 35


 1131 0080 B0BD     		pop	{r4, r5, r7, pc}
 1132              	.L82:
 1133 0082 C046C046 		.align	3
 1133      C046
 1134              	.L81:
 1135 0088 80969800 		.word	10000000
 1136 008c 00000000 		.word	0
 1137 0090 00000000 		.word	ADC_offset
 1138 0094 00000000 		.word	ADC_countsPer10Volt
 1139              		.cfi_endproc
 1140              	.LFE18:
 1141              		.size	ADC_CountsTo_uVolts, .-ADC_CountsTo_uVolts
 1142              		.global	__aeabi_i2f
 1143              		.global	__aeabi_fmul
 1144              		.global	__aeabi_fdiv
 1145              		.section	.text.ADC_CountsTo_Volts,"ax",%progbits
 1146              		.align	2
 1147              		.global	ADC_CountsTo_Volts
 1148              		.code	16
 1149              		.thumb_func
 1150              		.type	ADC_CountsTo_Volts, %function
 1151              	ADC_CountsTo_Volts:
 1152              	.LFB19:
 800:.\Generated_Source\PSoC4/ADC.c **** 
 801:.\Generated_Source\PSoC4/ADC.c **** 
 802:.\Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 803:.\Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_CountsTo_Volts
 804:.\Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 805:.\Generated_Source\PSoC4/ADC.c ****     *
 806:.\Generated_Source\PSoC4/ADC.c ****     * Summary:
 807:.\Generated_Source\PSoC4/ADC.c ****     *  Converts the ADC output to Volts as a floating point number.
 808:.\Generated_Source\PSoC4/ADC.c ****     *  This function is not available when left data format justification selected.
 809:.\Generated_Source\PSoC4/ADC.c ****     *
 810:.\Generated_Source\PSoC4/ADC.c ****     * Parameters:
 811:.\Generated_Source\PSoC4/ADC.c ****     *  chan: The ADC channel number.
 812:.\Generated_Source\PSoC4/ADC.c ****     *  Result from the ADC conversion
 813:.\Generated_Source\PSoC4/ADC.c ****     *
 814:.\Generated_Source\PSoC4/ADC.c ****     * Return:
 815:.\Generated_Source\PSoC4/ADC.c ****     *  Results in Volts
 816:.\Generated_Source\PSoC4/ADC.c ****     *
 817:.\Generated_Source\PSoC4/ADC.c ****     * Global variables:
 818:.\Generated_Source\PSoC4/ADC.c ****     *  ADC_countsPer10Volt:  used to convert ADC counts to Volts.
 819:.\Generated_Source\PSoC4/ADC.c ****     *  ADC_Offset:  Used as the offset while converting ADC counts
 820:.\Generated_Source\PSoC4/ADC.c ****     *   to mVolts.
 821:.\Generated_Source\PSoC4/ADC.c ****     *
 822:.\Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 823:.\Generated_Source\PSoC4/ADC.c ****     float32 ADC_CountsTo_Volts(uint32 chan, int16 adcCounts)
 824:.\Generated_Source\PSoC4/ADC.c ****     {
 1153              		.loc 1 824 0
 1154              		.cfi_startproc
 1155 0000 90B5     		push	{r4, r7, lr}
 1156              		.cfi_def_cfa_offset 12
 1157              		.cfi_offset 4, -12
 1158              		.cfi_offset 7, -8
 1159              		.cfi_offset 14, -4
 1160 0002 85B0     		sub	sp, sp, #20
 1161              		.cfi_def_cfa_offset 32
ARM GAS  C:\Users\Shahed\AppData\Local\Temp\cc22cuHL.s 			page 36


 1162 0004 00AF     		add	r7, sp, #0
 1163              		.cfi_def_cfa_register 7
 1164 0006 7860     		str	r0, [r7, #4]
 1165 0008 0A1C     		mov	r2, r1
 1166 000a BB1C     		add	r3, r7, #2
 1167 000c 1A80     		strh	r2, [r3]
 825:.\Generated_Source\PSoC4/ADC.c ****         float32 volts;
 826:.\Generated_Source\PSoC4/ADC.c **** 
 827:.\Generated_Source\PSoC4/ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 828:.\Generated_Source\PSoC4/ADC.c ****         CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 1168              		.loc 1 828 0
 1169 000e 7B68     		ldr	r3, [r7, #4]
 1170 0010 002B     		cmp	r3, #0
 1171 0012 02D0     		beq	.L84
 1172              		.loc 1 828 0 is_stmt 0 discriminator 1
 1173 0014 0020     		mov	r0, #0
 1174 0016 FFF7FEFF 		bl	CyHalt
 1175              	.L84:
 829:.\Generated_Source\PSoC4/ADC.c **** 
 830:.\Generated_Source\PSoC4/ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 831:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE)
 832:.\Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chan] & ADC_AVERAGING_EN) != 0u)
 833:.\Generated_Source\PSoC4/ADC.c ****             {
 834:.\Generated_Source\PSoC4/ADC.c ****                 adcCounts /= ADC_DEFAULT_AVG_SAMPLES_DIV;
 835:.\Generated_Source\PSoC4/ADC.c ****             }
 836:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE */
 837:.\Generated_Source\PSoC4/ADC.c **** 
 838:.\Generated_Source\PSoC4/ADC.c ****         /* Subtract ADC offset */
 839:.\Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 1176              		.loc 1 839 0 is_stmt 1
 1177 001a BB1C     		add	r3, r7, #2
 1178 001c 1A88     		ldrh	r2, [r3]
 1179 001e 154B     		ldr	r3, .L86
 1180 0020 7968     		ldr	r1, [r7, #4]
 1181 0022 4900     		lsl	r1, r1, #1
 1182 0024 CB5A     		ldrh	r3, [r1, r3]
 1183 0026 9BB2     		uxth	r3, r3
 1184 0028 9BB2     		uxth	r3, r3
 1185 002a D31A     		sub	r3, r2, r3
 1186 002c 9AB2     		uxth	r2, r3
 1187 002e BB1C     		add	r3, r7, #2
 1188 0030 1A80     		strh	r2, [r3]
 840:.\Generated_Source\PSoC4/ADC.c **** 
 841:.\Generated_Source\PSoC4/ADC.c ****         volts = ((float32)adcCounts * ADC_10V_COUNTS) / (float32)ADC_countsPer10Volt[chan];
 1189              		.loc 1 841 0
 1190 0032 BB1C     		add	r3, r7, #2
 1191 0034 0022     		mov	r2, #0
 1192 0036 9B5E     		ldrsh	r3, [r3, r2]
 1193 0038 181C     		mov	r0, r3
 1194 003a FFF7FEFF 		bl	__aeabi_i2f
 1195 003e 031C     		add	r3, r0, #0
 1196 0040 181C     		add	r0, r3, #0
 1197 0042 0D49     		ldr	r1, .L86+4
 1198 0044 FFF7FEFF 		bl	__aeabi_fmul
 1199 0048 031C     		add	r3, r0, #0
 1200 004a 1C1C     		add	r4, r3, #0
 1201 004c 0B4B     		ldr	r3, .L86+8
ARM GAS  C:\Users\Shahed\AppData\Local\Temp\cc22cuHL.s 			page 37


 1202 004e 7A68     		ldr	r2, [r7, #4]
 1203 0050 9200     		lsl	r2, r2, #2
 1204 0052 D358     		ldr	r3, [r2, r3]
 1205 0054 181C     		mov	r0, r3
 1206 0056 FFF7FEFF 		bl	__aeabi_i2f
 1207 005a 031C     		add	r3, r0, #0
 1208 005c 201C     		add	r0, r4, #0
 1209 005e 191C     		add	r1, r3, #0
 1210 0060 FFF7FEFF 		bl	__aeabi_fdiv
 1211 0064 031C     		add	r3, r0, #0
 1212 0066 FB60     		str	r3, [r7, #12]
 842:.\Generated_Source\PSoC4/ADC.c **** 
 843:.\Generated_Source\PSoC4/ADC.c ****         return( volts );
 1213              		.loc 1 843 0
 1214 0068 FB68     		ldr	r3, [r7, #12]
 844:.\Generated_Source\PSoC4/ADC.c ****     }
 1215              		.loc 1 844 0
 1216 006a 181C     		add	r0, r3, #0
 1217 006c BD46     		mov	sp, r7
 1218 006e 05B0     		add	sp, sp, #20
 1219              		@ sp needed
 1220 0070 90BD     		pop	{r4, r7, pc}
 1221              	.L87:
 1222 0072 C046     		.align	2
 1223              	.L86:
 1224 0074 00000000 		.word	ADC_offset
 1225 0078 00002041 		.word	1092616192
 1226 007c 00000000 		.word	ADC_countsPer10Volt
 1227              		.cfi_endproc
 1228              	.LFE19:
 1229              		.size	ADC_CountsTo_Volts, .-ADC_CountsTo_Volts
 1230              		.text
 1231              	.Letext0:
 1232              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 1233              		.section	.debug_info,"",%progbits
 1234              	.Ldebug_info0:
 1235 0000 70040000 		.4byte	0x470
 1236 0004 0400     		.2byte	0x4
 1237 0006 00000000 		.4byte	.Ldebug_abbrev0
 1238 000a 04       		.byte	0x4
 1239 000b 01       		.uleb128 0x1
 1240 000c 0E030000 		.4byte	.LASF59
 1241 0010 01       		.byte	0x1
 1242 0011 27000000 		.4byte	.LASF60
 1243 0015 92020000 		.4byte	.LASF61
 1244 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1245 001d 00000000 		.4byte	0
 1246 0021 00000000 		.4byte	.Ldebug_line0
 1247 0025 02       		.uleb128 0x2
 1248 0026 01       		.byte	0x1
 1249 0027 06       		.byte	0x6
 1250 0028 F6020000 		.4byte	.LASF0
 1251 002c 02       		.uleb128 0x2
 1252 002d 01       		.byte	0x1
 1253 002e 08       		.byte	0x8
 1254 002f E3000000 		.4byte	.LASF1
 1255 0033 02       		.uleb128 0x2
ARM GAS  C:\Users\Shahed\AppData\Local\Temp\cc22cuHL.s 			page 38


 1256 0034 02       		.byte	0x2
 1257 0035 05       		.byte	0x5
 1258 0036 8B000000 		.4byte	.LASF2
 1259 003a 02       		.uleb128 0x2
 1260 003b 02       		.byte	0x2
 1261 003c 07       		.byte	0x7
 1262 003d 78000000 		.4byte	.LASF3
 1263 0041 02       		.uleb128 0x2
 1264 0042 04       		.byte	0x4
 1265 0043 05       		.byte	0x5
 1266 0044 84020000 		.4byte	.LASF4
 1267 0048 02       		.uleb128 0x2
 1268 0049 04       		.byte	0x4
 1269 004a 07       		.byte	0x7
 1270 004b 08010000 		.4byte	.LASF5
 1271 004f 02       		.uleb128 0x2
 1272 0050 08       		.byte	0x8
 1273 0051 05       		.byte	0x5
 1274 0052 00000000 		.4byte	.LASF6
 1275 0056 02       		.uleb128 0x2
 1276 0057 08       		.byte	0x8
 1277 0058 07       		.byte	0x7
 1278 0059 C3010000 		.4byte	.LASF7
 1279 005d 03       		.uleb128 0x3
 1280 005e 04       		.byte	0x4
 1281 005f 05       		.byte	0x5
 1282 0060 696E7400 		.ascii	"int\000"
 1283 0064 02       		.uleb128 0x2
 1284 0065 04       		.byte	0x4
 1285 0066 07       		.byte	0x7
 1286 0067 A4010000 		.4byte	.LASF8
 1287 006b 04       		.uleb128 0x4
 1288 006c 6A020000 		.4byte	.LASF9
 1289 0070 02       		.byte	0x2
 1290 0071 A1       		.byte	0xa1
 1291 0072 2C000000 		.4byte	0x2c
 1292 0076 04       		.uleb128 0x4
 1293 0077 7B010000 		.4byte	.LASF10
 1294 007b 02       		.byte	0x2
 1295 007c A2       		.byte	0xa2
 1296 007d 3A000000 		.4byte	0x3a
 1297 0081 04       		.uleb128 0x4
 1298 0082 8C010000 		.4byte	.LASF11
 1299 0086 02       		.byte	0x2
 1300 0087 A3       		.byte	0xa3
 1301 0088 48000000 		.4byte	0x48
 1302 008c 04       		.uleb128 0x4
 1303 008d 02010000 		.4byte	.LASF12
 1304 0091 02       		.byte	0x2
 1305 0092 A5       		.byte	0xa5
 1306 0093 33000000 		.4byte	0x33
 1307 0097 04       		.uleb128 0x4
 1308 0098 1A010000 		.4byte	.LASF13
 1309 009c 02       		.byte	0x2
 1310 009d A6       		.byte	0xa6
 1311 009e 41000000 		.4byte	0x41
 1312 00a2 04       		.uleb128 0x4
ARM GAS  C:\Users\Shahed\AppData\Local\Temp\cc22cuHL.s 			page 39


 1313 00a3 BA000000 		.4byte	.LASF14
 1314 00a7 02       		.byte	0x2
 1315 00a8 A7       		.byte	0xa7
 1316 00a9 AD000000 		.4byte	0xad
 1317 00ad 02       		.uleb128 0x2
 1318 00ae 04       		.byte	0x4
 1319 00af 04       		.byte	0x4
 1320 00b0 4D000000 		.4byte	.LASF15
 1321 00b4 02       		.uleb128 0x2
 1322 00b5 08       		.byte	0x8
 1323 00b6 04       		.byte	0x4
 1324 00b7 63010000 		.4byte	.LASF16
 1325 00bb 04       		.uleb128 0x4
 1326 00bc 8A030000 		.4byte	.LASF17
 1327 00c0 02       		.byte	0x2
 1328 00c1 AC       		.byte	0xac
 1329 00c2 4F000000 		.4byte	0x4f
 1330 00c6 02       		.uleb128 0x2
 1331 00c7 01       		.byte	0x1
 1332 00c8 08       		.byte	0x8
 1333 00c9 8D020000 		.4byte	.LASF18
 1334 00cd 05       		.uleb128 0x5
 1335 00ce 21000000 		.4byte	.LASF19
 1336 00d2 02       		.byte	0x2
 1337 00d3 4D01     		.2byte	0x14d
 1338 00d5 D9000000 		.4byte	0xd9
 1339 00d9 06       		.uleb128 0x6
 1340 00da 81000000 		.4byte	0x81
 1341 00de 02       		.uleb128 0x2
 1342 00df 04       		.byte	0x4
 1343 00e0 07       		.byte	0x7
 1344 00e1 06020000 		.4byte	.LASF20
 1345 00e5 07       		.uleb128 0x7
 1346 00e6 E1010000 		.4byte	.LASF24
 1347 00ea 01       		.byte	0x1
 1348 00eb 3F       		.byte	0x3f
 1349 00ec 00000000 		.4byte	.LFB2
 1350 00f0 24000000 		.4byte	.LFE2-.LFB2
 1351 00f4 01       		.uleb128 0x1
 1352 00f5 9C       		.byte	0x9c
 1353 00f6 08       		.uleb128 0x8
 1354 00f7 EB010000 		.4byte	.LASF35
 1355 00fb 01       		.byte	0x1
 1356 00fc 5E       		.byte	0x5e
 1357 00fd 00000000 		.4byte	.LFB3
 1358 0101 BC010000 		.4byte	.LFE3-.LFB3
 1359 0105 01       		.uleb128 0x1
 1360 0106 9C       		.byte	0x9c
 1361 0107 36010000 		.4byte	0x136
 1362 010b 09       		.uleb128 0x9
 1363 010c 4C020000 		.4byte	.LASF21
 1364 0110 01       		.byte	0x1
 1365 0111 60       		.byte	0x60
 1366 0112 81000000 		.4byte	0x81
 1367 0116 02       		.uleb128 0x2
 1368 0117 91       		.byte	0x91
 1369 0118 6C       		.sleb128 -20
ARM GAS  C:\Users\Shahed\AppData\Local\Temp\cc22cuHL.s 			page 40


 1370 0119 09       		.uleb128 0x9
 1371 011a CD000000 		.4byte	.LASF22
 1372 011e 01       		.byte	0x1
 1373 011f 61       		.byte	0x61
 1374 0120 81000000 		.4byte	0x81
 1375 0124 02       		.uleb128 0x2
 1376 0125 91       		.byte	0x91
 1377 0126 64       		.sleb128 -28
 1378 0127 09       		.uleb128 0x9
 1379 0128 BC010000 		.4byte	.LASF23
 1380 012c 01       		.byte	0x1
 1381 012d 62       		.byte	0x62
 1382 012e 97000000 		.4byte	0x97
 1383 0132 02       		.uleb128 0x2
 1384 0133 91       		.byte	0x91
 1385 0134 68       		.sleb128 -24
 1386 0135 00       		.byte	0
 1387 0136 0A       		.uleb128 0xa
 1388 0137 B1010000 		.4byte	.LASF25
 1389 013b 01       		.byte	0x1
 1390 013c 2A01     		.2byte	0x12a
 1391 013e 00000000 		.4byte	.LFB4
 1392 0142 38000000 		.4byte	.LFE4-.LFB4
 1393 0146 01       		.uleb128 0x1
 1394 0147 9C       		.byte	0x9c
 1395 0148 0B       		.uleb128 0xb
 1396 0149 90030000 		.4byte	.LASF26
 1397 014d 01       		.byte	0x1
 1398 014e 4D01     		.2byte	0x14d
 1399 0150 00000000 		.4byte	.LFB5
 1400 0154 18000000 		.4byte	.LFE5-.LFB5
 1401 0158 01       		.uleb128 0x1
 1402 0159 9C       		.byte	0x9c
 1403 015a 0B       		.uleb128 0xb
 1404 015b 36020000 		.4byte	.LASF27
 1405 015f 01       		.byte	0x1
 1406 0160 6701     		.2byte	0x167
 1407 0162 00000000 		.4byte	.LFB6
 1408 0166 1C000000 		.4byte	.LFE6-.LFB6
 1409 016a 01       		.uleb128 0x1
 1410 016b 9C       		.byte	0x9c
 1411 016c 0B       		.uleb128 0xb
 1412 016d 5A020000 		.4byte	.LASF28
 1413 0171 01       		.byte	0x1
 1414 0172 8001     		.2byte	0x180
 1415 0174 00000000 		.4byte	.LFB7
 1416 0178 1C000000 		.4byte	.LFE7-.LFB7
 1417 017c 01       		.uleb128 0x1
 1418 017d 9C       		.byte	0x9c
 1419 017e 0C       		.uleb128 0xc
 1420 017f 4F010000 		.4byte	.LASF30
 1421 0183 01       		.byte	0x1
 1422 0184 A201     		.2byte	0x1a2
 1423 0186 81000000 		.4byte	0x81
 1424 018a 00000000 		.4byte	.LFB8
 1425 018e 48000000 		.4byte	.LFE8-.LFB8
 1426 0192 01       		.uleb128 0x1
ARM GAS  C:\Users\Shahed\AppData\Local\Temp\cc22cuHL.s 			page 41


 1427 0193 9C       		.byte	0x9c
 1428 0194 B7010000 		.4byte	0x1b7
 1429 0198 0D       		.uleb128 0xd
 1430 0199 52020000 		.4byte	.LASF32
 1431 019d 01       		.byte	0x1
 1432 019e A201     		.2byte	0x1a2
 1433 01a0 81000000 		.4byte	0x81
 1434 01a4 02       		.uleb128 0x2
 1435 01a5 91       		.byte	0x91
 1436 01a6 6C       		.sleb128 -20
 1437 01a7 0E       		.uleb128 0xe
 1438 01a8 B3000000 		.4byte	.LASF29
 1439 01ac 01       		.byte	0x1
 1440 01ad A401     		.2byte	0x1a4
 1441 01af 81000000 		.4byte	0x81
 1442 01b3 02       		.uleb128 0x2
 1443 01b4 91       		.byte	0x91
 1444 01b5 74       		.sleb128 -12
 1445 01b6 00       		.byte	0
 1446 01b7 0F       		.uleb128 0xf
 1447 01b8 20010000 		.4byte	.LASF31
 1448 01bc 01       		.byte	0x1
 1449 01bd D801     		.2byte	0x1d8
 1450 01bf 8C000000 		.4byte	0x8c
 1451 01c3 00000000 		.4byte	.LFB9
 1452 01c7 44000000 		.4byte	.LFE9-.LFB9
 1453 01cb 01       		.uleb128 0x1
 1454 01cc 9C       		.byte	0x9c
 1455 01cd F0010000 		.4byte	0x1f0
 1456 01d1 0D       		.uleb128 0xd
 1457 01d2 FA010000 		.4byte	.LASF33
 1458 01d6 01       		.byte	0x1
 1459 01d7 D801     		.2byte	0x1d8
 1460 01d9 81000000 		.4byte	0x81
 1461 01dd 02       		.uleb128 0x2
 1462 01de 91       		.byte	0x91
 1463 01df 6C       		.sleb128 -20
 1464 01e0 0E       		.uleb128 0xe
 1465 01e1 DA010000 		.4byte	.LASF34
 1466 01e5 01       		.byte	0x1
 1467 01e6 DA01     		.2byte	0x1da
 1468 01e8 81000000 		.4byte	0x81
 1469 01ec 02       		.uleb128 0x2
 1470 01ed 91       		.byte	0x91
 1471 01ee 74       		.sleb128 -12
 1472 01ef 00       		.byte	0
 1473 01f0 10       		.uleb128 0x10
 1474 01f1 30010000 		.4byte	.LASF36
 1475 01f5 01       		.byte	0x1
 1476 01f6 0502     		.2byte	0x205
 1477 01f8 00000000 		.4byte	.LFB10
 1478 01fc 1C000000 		.4byte	.LFE10-.LFB10
 1479 0200 01       		.uleb128 0x1
 1480 0201 9C       		.byte	0x9c
 1481 0202 16020000 		.4byte	0x216
 1482 0206 0D       		.uleb128 0xd
 1483 0207 47020000 		.4byte	.LASF37
ARM GAS  C:\Users\Shahed\AppData\Local\Temp\cc22cuHL.s 			page 42


 1484 020b 01       		.byte	0x1
 1485 020c 0502     		.2byte	0x205
 1486 020e 81000000 		.4byte	0x81
 1487 0212 02       		.uleb128 0x2
 1488 0213 91       		.byte	0x91
 1489 0214 74       		.sleb128 -12
 1490 0215 00       		.byte	0
 1491 0216 10       		.uleb128 0x10
 1492 0217 A3000000 		.4byte	.LASF38
 1493 021b 01       		.byte	0x1
 1494 021c 3102     		.2byte	0x231
 1495 021e 00000000 		.4byte	.LFB11
 1496 0222 30000000 		.4byte	.LFE11-.LFB11
 1497 0226 01       		.uleb128 0x1
 1498 0227 9C       		.byte	0x9c
 1499 0228 3C020000 		.4byte	0x23c
 1500 022c 0D       		.uleb128 0xd
 1501 022d 6A010000 		.4byte	.LASF39
 1502 0231 01       		.byte	0x1
 1503 0232 3102     		.2byte	0x231
 1504 0234 81000000 		.4byte	0x81
 1505 0238 02       		.uleb128 0x2
 1506 0239 91       		.byte	0x91
 1507 023a 74       		.sleb128 -12
 1508 023b 00       		.byte	0
 1509 023c 10       		.uleb128 0x10
 1510 023d F1000000 		.4byte	.LASF40
 1511 0241 01       		.byte	0x1
 1512 0242 4602     		.2byte	0x246
 1513 0244 00000000 		.4byte	.LFB12
 1514 0248 2C000000 		.4byte	.LFE12-.LFB12
 1515 024c 01       		.uleb128 0x1
 1516 024d 9C       		.byte	0x9c
 1517 024e 62020000 		.4byte	0x262
 1518 0252 0D       		.uleb128 0xd
 1519 0253 53000000 		.4byte	.LASF41
 1520 0257 01       		.byte	0x1
 1521 0258 4602     		.2byte	0x246
 1522 025a 81000000 		.4byte	0x81
 1523 025e 02       		.uleb128 0x2
 1524 025f 91       		.byte	0x91
 1525 0260 74       		.sleb128 -12
 1526 0261 00       		.byte	0
 1527 0262 10       		.uleb128 0x10
 1528 0263 93010000 		.4byte	.LASF42
 1529 0267 01       		.byte	0x1
 1530 0268 5E02     		.2byte	0x25e
 1531 026a 00000000 		.4byte	.LFB13
 1532 026e 1C000000 		.4byte	.LFE13-.LFB13
 1533 0272 01       		.uleb128 0x1
 1534 0273 9C       		.byte	0x9c
 1535 0274 88020000 		.4byte	0x288
 1536 0278 0D       		.uleb128 0xd
 1537 0279 47020000 		.4byte	.LASF37
 1538 027d 01       		.byte	0x1
 1539 027e 5E02     		.2byte	0x25e
 1540 0280 81000000 		.4byte	0x81
ARM GAS  C:\Users\Shahed\AppData\Local\Temp\cc22cuHL.s 			page 43


 1541 0284 02       		.uleb128 0x2
 1542 0285 91       		.byte	0x91
 1543 0286 74       		.sleb128 -12
 1544 0287 00       		.byte	0
 1545 0288 10       		.uleb128 0x10
 1546 0289 40010000 		.4byte	.LASF43
 1547 028d 01       		.byte	0x1
 1548 028e 7502     		.2byte	0x275
 1549 0290 00000000 		.4byte	.LFB14
 1550 0294 1C000000 		.4byte	.LFE14-.LFB14
 1551 0298 01       		.uleb128 0x1
 1552 0299 9C       		.byte	0x9c
 1553 029a AE020000 		.4byte	0x2ae
 1554 029e 0D       		.uleb128 0xd
 1555 029f 47020000 		.4byte	.LASF37
 1556 02a3 01       		.byte	0x1
 1557 02a4 7502     		.2byte	0x275
 1558 02a6 81000000 		.4byte	0x81
 1559 02aa 02       		.uleb128 0x2
 1560 02ab 91       		.byte	0x91
 1561 02ac 74       		.sleb128 -12
 1562 02ad 00       		.byte	0
 1563 02ae 11       		.uleb128 0x11
 1564 02af 95000000 		.4byte	.LASF44
 1565 02b3 01       		.byte	0x1
 1566 02b4 9102     		.2byte	0x291
 1567 02b6 00000000 		.4byte	.LFB15
 1568 02ba 30000000 		.4byte	.LFE15-.LFB15
 1569 02be 01       		.uleb128 0x1
 1570 02bf 9C       		.byte	0x9c
 1571 02c0 E3020000 		.4byte	0x2e3
 1572 02c4 0D       		.uleb128 0xd
 1573 02c5 FA010000 		.4byte	.LASF33
 1574 02c9 01       		.byte	0x1
 1575 02ca 9102     		.2byte	0x291
 1576 02cc 81000000 		.4byte	0x81
 1577 02d0 02       		.uleb128 0x2
 1578 02d1 91       		.byte	0x91
 1579 02d2 74       		.sleb128 -12
 1580 02d3 0D       		.uleb128 0xd
 1581 02d4 46000000 		.4byte	.LASF45
 1582 02d8 01       		.byte	0x1
 1583 02d9 9102     		.2byte	0x291
 1584 02db 8C000000 		.4byte	0x8c
 1585 02df 02       		.uleb128 0x2
 1586 02e0 91       		.byte	0x91
 1587 02e1 72       		.sleb128 -14
 1588 02e2 00       		.byte	0
 1589 02e3 11       		.uleb128 0x11
 1590 02e4 D7000000 		.4byte	.LASF46
 1591 02e8 01       		.byte	0x1
 1592 02e9 B302     		.2byte	0x2b3
 1593 02eb 00000000 		.4byte	.LFB16
 1594 02ef 2C000000 		.4byte	.LFE16-.LFB16
 1595 02f3 01       		.uleb128 0x1
 1596 02f4 9C       		.byte	0x9c
 1597 02f5 18030000 		.4byte	0x318
ARM GAS  C:\Users\Shahed\AppData\Local\Temp\cc22cuHL.s 			page 44


 1598 02f9 0D       		.uleb128 0xd
 1599 02fa FA010000 		.4byte	.LASF33
 1600 02fe 01       		.byte	0x1
 1601 02ff B302     		.2byte	0x2b3
 1602 0301 81000000 		.4byte	0x81
 1603 0305 02       		.uleb128 0x2
 1604 0306 91       		.byte	0x91
 1605 0307 74       		.sleb128 -12
 1606 0308 0D       		.uleb128 0xd
 1607 0309 73010000 		.4byte	.LASF47
 1608 030d 01       		.byte	0x1
 1609 030e B302     		.2byte	0x2b3
 1610 0310 97000000 		.4byte	0x97
 1611 0314 02       		.uleb128 0x2
 1612 0315 91       		.byte	0x91
 1613 0316 70       		.sleb128 -16
 1614 0317 00       		.byte	0
 1615 0318 0F       		.uleb128 0xf
 1616 0319 5D000000 		.4byte	.LASF48
 1617 031d 01       		.byte	0x1
 1618 031e D402     		.2byte	0x2d4
 1619 0320 8C000000 		.4byte	0x8c
 1620 0324 00000000 		.4byte	.LFB17
 1621 0328 A4000000 		.4byte	.LFE17-.LFB17
 1622 032c 01       		.uleb128 0x1
 1623 032d 9C       		.byte	0x9c
 1624 032e 60030000 		.4byte	0x360
 1625 0332 0D       		.uleb128 0xd
 1626 0333 FA010000 		.4byte	.LASF33
 1627 0337 01       		.byte	0x1
 1628 0338 D402     		.2byte	0x2d4
 1629 033a 81000000 		.4byte	0x81
 1630 033e 02       		.uleb128 0x2
 1631 033f 91       		.byte	0x91
 1632 0340 6C       		.sleb128 -20
 1633 0341 0D       		.uleb128 0xd
 1634 0342 82010000 		.4byte	.LASF49
 1635 0346 01       		.byte	0x1
 1636 0347 D402     		.2byte	0x2d4
 1637 0349 8C000000 		.4byte	0x8c
 1638 034d 02       		.uleb128 0x2
 1639 034e 91       		.byte	0x91
 1640 034f 6A       		.sleb128 -22
 1641 0350 0E       		.uleb128 0xe
 1642 0351 FF010000 		.4byte	.LASF50
 1643 0355 01       		.byte	0x1
 1644 0356 D602     		.2byte	0x2d6
 1645 0358 8C000000 		.4byte	0x8c
 1646 035c 02       		.uleb128 0x2
 1647 035d 91       		.byte	0x91
 1648 035e 76       		.sleb128 -10
 1649 035f 00       		.byte	0
 1650 0360 0F       		.uleb128 0xf
 1651 0361 0F020000 		.4byte	.LASF51
 1652 0365 01       		.byte	0x1
 1653 0366 0A03     		.2byte	0x30a
 1654 0368 97000000 		.4byte	0x97
ARM GAS  C:\Users\Shahed\AppData\Local\Temp\cc22cuHL.s 			page 45


 1655 036c 00000000 		.4byte	.LFB18
 1656 0370 98000000 		.4byte	.LFE18-.LFB18
 1657 0374 01       		.uleb128 0x1
 1658 0375 9C       		.byte	0x9c
 1659 0376 A8030000 		.4byte	0x3a8
 1660 037a 0D       		.uleb128 0xd
 1661 037b FA010000 		.4byte	.LASF33
 1662 037f 01       		.byte	0x1
 1663 0380 0A03     		.2byte	0x30a
 1664 0382 81000000 		.4byte	0x81
 1665 0386 02       		.uleb128 0x2
 1666 0387 91       		.byte	0x91
 1667 0388 64       		.sleb128 -28
 1668 0389 0D       		.uleb128 0xd
 1669 038a 82010000 		.4byte	.LASF49
 1670 038e 01       		.byte	0x1
 1671 038f 0A03     		.2byte	0x30a
 1672 0391 8C000000 		.4byte	0x8c
 1673 0395 02       		.uleb128 0x2
 1674 0396 91       		.byte	0x91
 1675 0397 62       		.sleb128 -30
 1676 0398 0E       		.uleb128 0xe
 1677 0399 71000000 		.4byte	.LASF52
 1678 039d 01       		.byte	0x1
 1679 039e 0C03     		.2byte	0x30c
 1680 03a0 BB000000 		.4byte	0xbb
 1681 03a4 02       		.uleb128 0x2
 1682 03a5 91       		.byte	0x91
 1683 03a6 68       		.sleb128 -24
 1684 03a7 00       		.byte	0
 1685 03a8 0F       		.uleb128 0xf
 1686 03a9 23020000 		.4byte	.LASF53
 1687 03ad 01       		.byte	0x1
 1688 03ae 3703     		.2byte	0x337
 1689 03b0 A2000000 		.4byte	0xa2
 1690 03b4 00000000 		.4byte	.LFB19
 1691 03b8 80000000 		.4byte	.LFE19-.LFB19
 1692 03bc 01       		.uleb128 0x1
 1693 03bd 9C       		.byte	0x9c
 1694 03be F0030000 		.4byte	0x3f0
 1695 03c2 0D       		.uleb128 0xd
 1696 03c3 FA010000 		.4byte	.LASF33
 1697 03c7 01       		.byte	0x1
 1698 03c8 3703     		.2byte	0x337
 1699 03ca 81000000 		.4byte	0x81
 1700 03ce 02       		.uleb128 0x2
 1701 03cf 91       		.byte	0x91
 1702 03d0 64       		.sleb128 -28
 1703 03d1 0D       		.uleb128 0xd
 1704 03d2 82010000 		.4byte	.LASF49
 1705 03d6 01       		.byte	0x1
 1706 03d7 3703     		.2byte	0x337
 1707 03d9 8C000000 		.4byte	0x8c
 1708 03dd 02       		.uleb128 0x2
 1709 03de 91       		.byte	0x91
 1710 03df 62       		.sleb128 -30
 1711 03e0 0E       		.uleb128 0xe
ARM GAS  C:\Users\Shahed\AppData\Local\Temp\cc22cuHL.s 			page 46


 1712 03e1 F4010000 		.4byte	.LASF54
 1713 03e5 01       		.byte	0x1
 1714 03e6 3903     		.2byte	0x339
 1715 03e8 A2000000 		.4byte	0xa2
 1716 03ec 02       		.uleb128 0x2
 1717 03ed 91       		.byte	0x91
 1718 03ee 6C       		.sleb128 -20
 1719 03ef 00       		.byte	0
 1720 03f0 12       		.uleb128 0x12
 1721 03f1 81000000 		.4byte	0x81
 1722 03f5 00040000 		.4byte	0x400
 1723 03f9 13       		.uleb128 0x13
 1724 03fa DE000000 		.4byte	0xde
 1725 03fe 00       		.byte	0
 1726 03ff 00       		.byte	0
 1727 0400 09       		.uleb128 0x9
 1728 0401 0E000000 		.4byte	.LASF55
 1729 0405 01       		.byte	0x1
 1730 0406 21       		.byte	0x21
 1731 0407 11040000 		.4byte	0x411
 1732 040b 05       		.uleb128 0x5
 1733 040c 03       		.byte	0x3
 1734 040d 00000000 		.4byte	ADC_channelsConfig
 1735 0411 14       		.uleb128 0x14
 1736 0412 F0030000 		.4byte	0x3f0
 1737 0416 15       		.uleb128 0x15
 1738 0417 02030000 		.4byte	.LASF56
 1739 041b 01       		.byte	0x1
 1740 041c 18       		.byte	0x18
 1741 041d 6B000000 		.4byte	0x6b
 1742 0421 05       		.uleb128 0x5
 1743 0422 03       		.byte	0x3
 1744 0423 00000000 		.4byte	ADC_initVar
 1745 0427 12       		.uleb128 0x12
 1746 0428 8C000000 		.4byte	0x8c
 1747 042c 37040000 		.4byte	0x437
 1748 0430 13       		.uleb128 0x13
 1749 0431 DE000000 		.4byte	0xde
 1750 0435 00       		.byte	0
 1751 0436 00       		.byte	0
 1752 0437 15       		.uleb128 0x15
 1753 0438 C2000000 		.4byte	.LASF57
 1754 043c 01       		.byte	0x1
 1755 043d 19       		.byte	0x19
 1756 043e 48040000 		.4byte	0x448
 1757 0442 05       		.uleb128 0x5
 1758 0443 03       		.byte	0x3
 1759 0444 00000000 		.4byte	ADC_offset
 1760 0448 06       		.uleb128 0x6
 1761 0449 27040000 		.4byte	0x427
 1762 044d 12       		.uleb128 0x12
 1763 044e 97000000 		.4byte	0x97
 1764 0452 5D040000 		.4byte	0x45d
 1765 0456 13       		.uleb128 0x13
 1766 0457 DE000000 		.4byte	0xde
 1767 045b 00       		.byte	0
 1768 045c 00       		.byte	0
ARM GAS  C:\Users\Shahed\AppData\Local\Temp\cc22cuHL.s 			page 47


 1769 045d 15       		.uleb128 0x15
 1770 045e 70020000 		.4byte	.LASF58
 1771 0462 01       		.byte	0x1
 1772 0463 1A       		.byte	0x1a
 1773 0464 6E040000 		.4byte	0x46e
 1774 0468 05       		.uleb128 0x5
 1775 0469 03       		.byte	0x3
 1776 046a 00000000 		.4byte	ADC_countsPer10Volt
 1777 046e 06       		.uleb128 0x6
 1778 046f 4D040000 		.4byte	0x44d
 1779 0473 00       		.byte	0
 1780              		.section	.debug_abbrev,"",%progbits
 1781              	.Ldebug_abbrev0:
 1782 0000 01       		.uleb128 0x1
 1783 0001 11       		.uleb128 0x11
 1784 0002 01       		.byte	0x1
 1785 0003 25       		.uleb128 0x25
 1786 0004 0E       		.uleb128 0xe
 1787 0005 13       		.uleb128 0x13
 1788 0006 0B       		.uleb128 0xb
 1789 0007 03       		.uleb128 0x3
 1790 0008 0E       		.uleb128 0xe
 1791 0009 1B       		.uleb128 0x1b
 1792 000a 0E       		.uleb128 0xe
 1793 000b 55       		.uleb128 0x55
 1794 000c 17       		.uleb128 0x17
 1795 000d 11       		.uleb128 0x11
 1796 000e 01       		.uleb128 0x1
 1797 000f 10       		.uleb128 0x10
 1798 0010 17       		.uleb128 0x17
 1799 0011 00       		.byte	0
 1800 0012 00       		.byte	0
 1801 0013 02       		.uleb128 0x2
 1802 0014 24       		.uleb128 0x24
 1803 0015 00       		.byte	0
 1804 0016 0B       		.uleb128 0xb
 1805 0017 0B       		.uleb128 0xb
 1806 0018 3E       		.uleb128 0x3e
 1807 0019 0B       		.uleb128 0xb
 1808 001a 03       		.uleb128 0x3
 1809 001b 0E       		.uleb128 0xe
 1810 001c 00       		.byte	0
 1811 001d 00       		.byte	0
 1812 001e 03       		.uleb128 0x3
 1813 001f 24       		.uleb128 0x24
 1814 0020 00       		.byte	0
 1815 0021 0B       		.uleb128 0xb
 1816 0022 0B       		.uleb128 0xb
 1817 0023 3E       		.uleb128 0x3e
 1818 0024 0B       		.uleb128 0xb
 1819 0025 03       		.uleb128 0x3
 1820 0026 08       		.uleb128 0x8
 1821 0027 00       		.byte	0
 1822 0028 00       		.byte	0
 1823 0029 04       		.uleb128 0x4
 1824 002a 16       		.uleb128 0x16
 1825 002b 00       		.byte	0
ARM GAS  C:\Users\Shahed\AppData\Local\Temp\cc22cuHL.s 			page 48


 1826 002c 03       		.uleb128 0x3
 1827 002d 0E       		.uleb128 0xe
 1828 002e 3A       		.uleb128 0x3a
 1829 002f 0B       		.uleb128 0xb
 1830 0030 3B       		.uleb128 0x3b
 1831 0031 0B       		.uleb128 0xb
 1832 0032 49       		.uleb128 0x49
 1833 0033 13       		.uleb128 0x13
 1834 0034 00       		.byte	0
 1835 0035 00       		.byte	0
 1836 0036 05       		.uleb128 0x5
 1837 0037 16       		.uleb128 0x16
 1838 0038 00       		.byte	0
 1839 0039 03       		.uleb128 0x3
 1840 003a 0E       		.uleb128 0xe
 1841 003b 3A       		.uleb128 0x3a
 1842 003c 0B       		.uleb128 0xb
 1843 003d 3B       		.uleb128 0x3b
 1844 003e 05       		.uleb128 0x5
 1845 003f 49       		.uleb128 0x49
 1846 0040 13       		.uleb128 0x13
 1847 0041 00       		.byte	0
 1848 0042 00       		.byte	0
 1849 0043 06       		.uleb128 0x6
 1850 0044 35       		.uleb128 0x35
 1851 0045 00       		.byte	0
 1852 0046 49       		.uleb128 0x49
 1853 0047 13       		.uleb128 0x13
 1854 0048 00       		.byte	0
 1855 0049 00       		.byte	0
 1856 004a 07       		.uleb128 0x7
 1857 004b 2E       		.uleb128 0x2e
 1858 004c 00       		.byte	0
 1859 004d 3F       		.uleb128 0x3f
 1860 004e 19       		.uleb128 0x19
 1861 004f 03       		.uleb128 0x3
 1862 0050 0E       		.uleb128 0xe
 1863 0051 3A       		.uleb128 0x3a
 1864 0052 0B       		.uleb128 0xb
 1865 0053 3B       		.uleb128 0x3b
 1866 0054 0B       		.uleb128 0xb
 1867 0055 27       		.uleb128 0x27
 1868 0056 19       		.uleb128 0x19
 1869 0057 11       		.uleb128 0x11
 1870 0058 01       		.uleb128 0x1
 1871 0059 12       		.uleb128 0x12
 1872 005a 06       		.uleb128 0x6
 1873 005b 40       		.uleb128 0x40
 1874 005c 18       		.uleb128 0x18
 1875 005d 9642     		.uleb128 0x2116
 1876 005f 19       		.uleb128 0x19
 1877 0060 00       		.byte	0
 1878 0061 00       		.byte	0
 1879 0062 08       		.uleb128 0x8
 1880 0063 2E       		.uleb128 0x2e
 1881 0064 01       		.byte	0x1
 1882 0065 3F       		.uleb128 0x3f
ARM GAS  C:\Users\Shahed\AppData\Local\Temp\cc22cuHL.s 			page 49


 1883 0066 19       		.uleb128 0x19
 1884 0067 03       		.uleb128 0x3
 1885 0068 0E       		.uleb128 0xe
 1886 0069 3A       		.uleb128 0x3a
 1887 006a 0B       		.uleb128 0xb
 1888 006b 3B       		.uleb128 0x3b
 1889 006c 0B       		.uleb128 0xb
 1890 006d 27       		.uleb128 0x27
 1891 006e 19       		.uleb128 0x19
 1892 006f 11       		.uleb128 0x11
 1893 0070 01       		.uleb128 0x1
 1894 0071 12       		.uleb128 0x12
 1895 0072 06       		.uleb128 0x6
 1896 0073 40       		.uleb128 0x40
 1897 0074 18       		.uleb128 0x18
 1898 0075 9642     		.uleb128 0x2116
 1899 0077 19       		.uleb128 0x19
 1900 0078 01       		.uleb128 0x1
 1901 0079 13       		.uleb128 0x13
 1902 007a 00       		.byte	0
 1903 007b 00       		.byte	0
 1904 007c 09       		.uleb128 0x9
 1905 007d 34       		.uleb128 0x34
 1906 007e 00       		.byte	0
 1907 007f 03       		.uleb128 0x3
 1908 0080 0E       		.uleb128 0xe
 1909 0081 3A       		.uleb128 0x3a
 1910 0082 0B       		.uleb128 0xb
 1911 0083 3B       		.uleb128 0x3b
 1912 0084 0B       		.uleb128 0xb
 1913 0085 49       		.uleb128 0x49
 1914 0086 13       		.uleb128 0x13
 1915 0087 02       		.uleb128 0x2
 1916 0088 18       		.uleb128 0x18
 1917 0089 00       		.byte	0
 1918 008a 00       		.byte	0
 1919 008b 0A       		.uleb128 0xa
 1920 008c 2E       		.uleb128 0x2e
 1921 008d 00       		.byte	0
 1922 008e 3F       		.uleb128 0x3f
 1923 008f 19       		.uleb128 0x19
 1924 0090 03       		.uleb128 0x3
 1925 0091 0E       		.uleb128 0xe
 1926 0092 3A       		.uleb128 0x3a
 1927 0093 0B       		.uleb128 0xb
 1928 0094 3B       		.uleb128 0x3b
 1929 0095 05       		.uleb128 0x5
 1930 0096 27       		.uleb128 0x27
 1931 0097 19       		.uleb128 0x19
 1932 0098 11       		.uleb128 0x11
 1933 0099 01       		.uleb128 0x1
 1934 009a 12       		.uleb128 0x12
 1935 009b 06       		.uleb128 0x6
 1936 009c 40       		.uleb128 0x40
 1937 009d 18       		.uleb128 0x18
 1938 009e 9642     		.uleb128 0x2116
 1939 00a0 19       		.uleb128 0x19
ARM GAS  C:\Users\Shahed\AppData\Local\Temp\cc22cuHL.s 			page 50


 1940 00a1 00       		.byte	0
 1941 00a2 00       		.byte	0
 1942 00a3 0B       		.uleb128 0xb
 1943 00a4 2E       		.uleb128 0x2e
 1944 00a5 00       		.byte	0
 1945 00a6 3F       		.uleb128 0x3f
 1946 00a7 19       		.uleb128 0x19
 1947 00a8 03       		.uleb128 0x3
 1948 00a9 0E       		.uleb128 0xe
 1949 00aa 3A       		.uleb128 0x3a
 1950 00ab 0B       		.uleb128 0xb
 1951 00ac 3B       		.uleb128 0x3b
 1952 00ad 05       		.uleb128 0x5
 1953 00ae 27       		.uleb128 0x27
 1954 00af 19       		.uleb128 0x19
 1955 00b0 11       		.uleb128 0x11
 1956 00b1 01       		.uleb128 0x1
 1957 00b2 12       		.uleb128 0x12
 1958 00b3 06       		.uleb128 0x6
 1959 00b4 40       		.uleb128 0x40
 1960 00b5 18       		.uleb128 0x18
 1961 00b6 9742     		.uleb128 0x2117
 1962 00b8 19       		.uleb128 0x19
 1963 00b9 00       		.byte	0
 1964 00ba 00       		.byte	0
 1965 00bb 0C       		.uleb128 0xc
 1966 00bc 2E       		.uleb128 0x2e
 1967 00bd 01       		.byte	0x1
 1968 00be 3F       		.uleb128 0x3f
 1969 00bf 19       		.uleb128 0x19
 1970 00c0 03       		.uleb128 0x3
 1971 00c1 0E       		.uleb128 0xe
 1972 00c2 3A       		.uleb128 0x3a
 1973 00c3 0B       		.uleb128 0xb
 1974 00c4 3B       		.uleb128 0x3b
 1975 00c5 05       		.uleb128 0x5
 1976 00c6 27       		.uleb128 0x27
 1977 00c7 19       		.uleb128 0x19
 1978 00c8 49       		.uleb128 0x49
 1979 00c9 13       		.uleb128 0x13
 1980 00ca 11       		.uleb128 0x11
 1981 00cb 01       		.uleb128 0x1
 1982 00cc 12       		.uleb128 0x12
 1983 00cd 06       		.uleb128 0x6
 1984 00ce 40       		.uleb128 0x40
 1985 00cf 18       		.uleb128 0x18
 1986 00d0 9742     		.uleb128 0x2117
 1987 00d2 19       		.uleb128 0x19
 1988 00d3 01       		.uleb128 0x1
 1989 00d4 13       		.uleb128 0x13
 1990 00d5 00       		.byte	0
 1991 00d6 00       		.byte	0
 1992 00d7 0D       		.uleb128 0xd
 1993 00d8 05       		.uleb128 0x5
 1994 00d9 00       		.byte	0
 1995 00da 03       		.uleb128 0x3
 1996 00db 0E       		.uleb128 0xe
ARM GAS  C:\Users\Shahed\AppData\Local\Temp\cc22cuHL.s 			page 51


 1997 00dc 3A       		.uleb128 0x3a
 1998 00dd 0B       		.uleb128 0xb
 1999 00de 3B       		.uleb128 0x3b
 2000 00df 05       		.uleb128 0x5
 2001 00e0 49       		.uleb128 0x49
 2002 00e1 13       		.uleb128 0x13
 2003 00e2 02       		.uleb128 0x2
 2004 00e3 18       		.uleb128 0x18
 2005 00e4 00       		.byte	0
 2006 00e5 00       		.byte	0
 2007 00e6 0E       		.uleb128 0xe
 2008 00e7 34       		.uleb128 0x34
 2009 00e8 00       		.byte	0
 2010 00e9 03       		.uleb128 0x3
 2011 00ea 0E       		.uleb128 0xe
 2012 00eb 3A       		.uleb128 0x3a
 2013 00ec 0B       		.uleb128 0xb
 2014 00ed 3B       		.uleb128 0x3b
 2015 00ee 05       		.uleb128 0x5
 2016 00ef 49       		.uleb128 0x49
 2017 00f0 13       		.uleb128 0x13
 2018 00f1 02       		.uleb128 0x2
 2019 00f2 18       		.uleb128 0x18
 2020 00f3 00       		.byte	0
 2021 00f4 00       		.byte	0
 2022 00f5 0F       		.uleb128 0xf
 2023 00f6 2E       		.uleb128 0x2e
 2024 00f7 01       		.byte	0x1
 2025 00f8 3F       		.uleb128 0x3f
 2026 00f9 19       		.uleb128 0x19
 2027 00fa 03       		.uleb128 0x3
 2028 00fb 0E       		.uleb128 0xe
 2029 00fc 3A       		.uleb128 0x3a
 2030 00fd 0B       		.uleb128 0xb
 2031 00fe 3B       		.uleb128 0x3b
 2032 00ff 05       		.uleb128 0x5
 2033 0100 27       		.uleb128 0x27
 2034 0101 19       		.uleb128 0x19
 2035 0102 49       		.uleb128 0x49
 2036 0103 13       		.uleb128 0x13
 2037 0104 11       		.uleb128 0x11
 2038 0105 01       		.uleb128 0x1
 2039 0106 12       		.uleb128 0x12
 2040 0107 06       		.uleb128 0x6
 2041 0108 40       		.uleb128 0x40
 2042 0109 18       		.uleb128 0x18
 2043 010a 9642     		.uleb128 0x2116
 2044 010c 19       		.uleb128 0x19
 2045 010d 01       		.uleb128 0x1
 2046 010e 13       		.uleb128 0x13
 2047 010f 00       		.byte	0
 2048 0110 00       		.byte	0
 2049 0111 10       		.uleb128 0x10
 2050 0112 2E       		.uleb128 0x2e
 2051 0113 01       		.byte	0x1
 2052 0114 3F       		.uleb128 0x3f
 2053 0115 19       		.uleb128 0x19
ARM GAS  C:\Users\Shahed\AppData\Local\Temp\cc22cuHL.s 			page 52


 2054 0116 03       		.uleb128 0x3
 2055 0117 0E       		.uleb128 0xe
 2056 0118 3A       		.uleb128 0x3a
 2057 0119 0B       		.uleb128 0xb
 2058 011a 3B       		.uleb128 0x3b
 2059 011b 05       		.uleb128 0x5
 2060 011c 27       		.uleb128 0x27
 2061 011d 19       		.uleb128 0x19
 2062 011e 11       		.uleb128 0x11
 2063 011f 01       		.uleb128 0x1
 2064 0120 12       		.uleb128 0x12
 2065 0121 06       		.uleb128 0x6
 2066 0122 40       		.uleb128 0x40
 2067 0123 18       		.uleb128 0x18
 2068 0124 9742     		.uleb128 0x2117
 2069 0126 19       		.uleb128 0x19
 2070 0127 01       		.uleb128 0x1
 2071 0128 13       		.uleb128 0x13
 2072 0129 00       		.byte	0
 2073 012a 00       		.byte	0
 2074 012b 11       		.uleb128 0x11
 2075 012c 2E       		.uleb128 0x2e
 2076 012d 01       		.byte	0x1
 2077 012e 3F       		.uleb128 0x3f
 2078 012f 19       		.uleb128 0x19
 2079 0130 03       		.uleb128 0x3
 2080 0131 0E       		.uleb128 0xe
 2081 0132 3A       		.uleb128 0x3a
 2082 0133 0B       		.uleb128 0xb
 2083 0134 3B       		.uleb128 0x3b
 2084 0135 05       		.uleb128 0x5
 2085 0136 27       		.uleb128 0x27
 2086 0137 19       		.uleb128 0x19
 2087 0138 11       		.uleb128 0x11
 2088 0139 01       		.uleb128 0x1
 2089 013a 12       		.uleb128 0x12
 2090 013b 06       		.uleb128 0x6
 2091 013c 40       		.uleb128 0x40
 2092 013d 18       		.uleb128 0x18
 2093 013e 9642     		.uleb128 0x2116
 2094 0140 19       		.uleb128 0x19
 2095 0141 01       		.uleb128 0x1
 2096 0142 13       		.uleb128 0x13
 2097 0143 00       		.byte	0
 2098 0144 00       		.byte	0
 2099 0145 12       		.uleb128 0x12
 2100 0146 01       		.uleb128 0x1
 2101 0147 01       		.byte	0x1
 2102 0148 49       		.uleb128 0x49
 2103 0149 13       		.uleb128 0x13
 2104 014a 01       		.uleb128 0x1
 2105 014b 13       		.uleb128 0x13
 2106 014c 00       		.byte	0
 2107 014d 00       		.byte	0
 2108 014e 13       		.uleb128 0x13
 2109 014f 21       		.uleb128 0x21
 2110 0150 00       		.byte	0
ARM GAS  C:\Users\Shahed\AppData\Local\Temp\cc22cuHL.s 			page 53


 2111 0151 49       		.uleb128 0x49
 2112 0152 13       		.uleb128 0x13
 2113 0153 2F       		.uleb128 0x2f
 2114 0154 0B       		.uleb128 0xb
 2115 0155 00       		.byte	0
 2116 0156 00       		.byte	0
 2117 0157 14       		.uleb128 0x14
 2118 0158 26       		.uleb128 0x26
 2119 0159 00       		.byte	0
 2120 015a 49       		.uleb128 0x49
 2121 015b 13       		.uleb128 0x13
 2122 015c 00       		.byte	0
 2123 015d 00       		.byte	0
 2124 015e 15       		.uleb128 0x15
 2125 015f 34       		.uleb128 0x34
 2126 0160 00       		.byte	0
 2127 0161 03       		.uleb128 0x3
 2128 0162 0E       		.uleb128 0xe
 2129 0163 3A       		.uleb128 0x3a
 2130 0164 0B       		.uleb128 0xb
 2131 0165 3B       		.uleb128 0x3b
 2132 0166 0B       		.uleb128 0xb
 2133 0167 49       		.uleb128 0x49
 2134 0168 13       		.uleb128 0x13
 2135 0169 3F       		.uleb128 0x3f
 2136 016a 19       		.uleb128 0x19
 2137 016b 02       		.uleb128 0x2
 2138 016c 18       		.uleb128 0x18
 2139 016d 00       		.byte	0
 2140 016e 00       		.byte	0
 2141 016f 00       		.byte	0
 2142              		.section	.debug_aranges,"",%progbits
 2143 0000 A4000000 		.4byte	0xa4
 2144 0004 0200     		.2byte	0x2
 2145 0006 00000000 		.4byte	.Ldebug_info0
 2146 000a 04       		.byte	0x4
 2147 000b 00       		.byte	0
 2148 000c 0000     		.2byte	0
 2149 000e 0000     		.2byte	0
 2150 0010 00000000 		.4byte	.LFB2
 2151 0014 24000000 		.4byte	.LFE2-.LFB2
 2152 0018 00000000 		.4byte	.LFB3
 2153 001c BC010000 		.4byte	.LFE3-.LFB3
 2154 0020 00000000 		.4byte	.LFB4
 2155 0024 38000000 		.4byte	.LFE4-.LFB4
 2156 0028 00000000 		.4byte	.LFB5
 2157 002c 18000000 		.4byte	.LFE5-.LFB5
 2158 0030 00000000 		.4byte	.LFB6
 2159 0034 1C000000 		.4byte	.LFE6-.LFB6
 2160 0038 00000000 		.4byte	.LFB7
 2161 003c 1C000000 		.4byte	.LFE7-.LFB7
 2162 0040 00000000 		.4byte	.LFB8
 2163 0044 48000000 		.4byte	.LFE8-.LFB8
 2164 0048 00000000 		.4byte	.LFB9
 2165 004c 44000000 		.4byte	.LFE9-.LFB9
 2166 0050 00000000 		.4byte	.LFB10
 2167 0054 1C000000 		.4byte	.LFE10-.LFB10
ARM GAS  C:\Users\Shahed\AppData\Local\Temp\cc22cuHL.s 			page 54


 2168 0058 00000000 		.4byte	.LFB11
 2169 005c 30000000 		.4byte	.LFE11-.LFB11
 2170 0060 00000000 		.4byte	.LFB12
 2171 0064 2C000000 		.4byte	.LFE12-.LFB12
 2172 0068 00000000 		.4byte	.LFB13
 2173 006c 1C000000 		.4byte	.LFE13-.LFB13
 2174 0070 00000000 		.4byte	.LFB14
 2175 0074 1C000000 		.4byte	.LFE14-.LFB14
 2176 0078 00000000 		.4byte	.LFB15
 2177 007c 30000000 		.4byte	.LFE15-.LFB15
 2178 0080 00000000 		.4byte	.LFB16
 2179 0084 2C000000 		.4byte	.LFE16-.LFB16
 2180 0088 00000000 		.4byte	.LFB17
 2181 008c A4000000 		.4byte	.LFE17-.LFB17
 2182 0090 00000000 		.4byte	.LFB18
 2183 0094 98000000 		.4byte	.LFE18-.LFB18
 2184 0098 00000000 		.4byte	.LFB19
 2185 009c 80000000 		.4byte	.LFE19-.LFB19
 2186 00a0 00000000 		.4byte	0
 2187 00a4 00000000 		.4byte	0
 2188              		.section	.debug_ranges,"",%progbits
 2189              	.Ldebug_ranges0:
 2190 0000 00000000 		.4byte	.LFB2
 2191 0004 24000000 		.4byte	.LFE2
 2192 0008 00000000 		.4byte	.LFB3
 2193 000c BC010000 		.4byte	.LFE3
 2194 0010 00000000 		.4byte	.LFB4
 2195 0014 38000000 		.4byte	.LFE4
 2196 0018 00000000 		.4byte	.LFB5
 2197 001c 18000000 		.4byte	.LFE5
 2198 0020 00000000 		.4byte	.LFB6
 2199 0024 1C000000 		.4byte	.LFE6
 2200 0028 00000000 		.4byte	.LFB7
 2201 002c 1C000000 		.4byte	.LFE7
 2202 0030 00000000 		.4byte	.LFB8
 2203 0034 48000000 		.4byte	.LFE8
 2204 0038 00000000 		.4byte	.LFB9
 2205 003c 44000000 		.4byte	.LFE9
 2206 0040 00000000 		.4byte	.LFB10
 2207 0044 1C000000 		.4byte	.LFE10
 2208 0048 00000000 		.4byte	.LFB11
 2209 004c 30000000 		.4byte	.LFE11
 2210 0050 00000000 		.4byte	.LFB12
 2211 0054 2C000000 		.4byte	.LFE12
 2212 0058 00000000 		.4byte	.LFB13
 2213 005c 1C000000 		.4byte	.LFE13
 2214 0060 00000000 		.4byte	.LFB14
 2215 0064 1C000000 		.4byte	.LFE14
 2216 0068 00000000 		.4byte	.LFB15
 2217 006c 30000000 		.4byte	.LFE15
 2218 0070 00000000 		.4byte	.LFB16
 2219 0074 2C000000 		.4byte	.LFE16
 2220 0078 00000000 		.4byte	.LFB17
 2221 007c A4000000 		.4byte	.LFE17
 2222 0080 00000000 		.4byte	.LFB18
 2223 0084 98000000 		.4byte	.LFE18
 2224 0088 00000000 		.4byte	.LFB19
ARM GAS  C:\Users\Shahed\AppData\Local\Temp\cc22cuHL.s 			page 55


 2225 008c 80000000 		.4byte	.LFE19
 2226 0090 00000000 		.4byte	0
 2227 0094 00000000 		.4byte	0
 2228              		.section	.debug_line,"",%progbits
 2229              	.Ldebug_line0:
 2230 0000 80020000 		.section	.debug_str,"MS",%progbits,1
 2230      02004200 
 2230      00000201 
 2230      FB0E0D00 
 2230      01010101 
 2231              	.LASF6:
 2232 0000 6C6F6E67 		.ascii	"long long int\000"
 2232      206C6F6E 
 2232      6720696E 
 2232      7400
 2233              	.LASF55:
 2234 000e 4144435F 		.ascii	"ADC_channelsConfig\000"
 2234      6368616E 
 2234      6E656C73 
 2234      436F6E66 
 2234      696700
 2235              	.LASF19:
 2236 0021 72656733 		.ascii	"reg32\000"
 2236      3200
 2237              	.LASF60:
 2238 0027 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\ADC.c\000"
 2238      6E657261 
 2238      7465645F 
 2238      536F7572 
 2238      63655C50 
 2239              	.LASF45:
 2240 0046 6F666673 		.ascii	"offset\000"
 2240      657400
 2241              	.LASF15:
 2242 004d 666C6F61 		.ascii	"float\000"
 2242      7400
 2243              	.LASF41:
 2244 0053 68696768 		.ascii	"highLimit\000"
 2244      4C696D69 
 2244      7400
 2245              	.LASF48:
 2246 005d 4144435F 		.ascii	"ADC_CountsTo_mVolts\000"
 2246      436F756E 
 2246      7473546F 
 2246      5F6D566F 
 2246      6C747300 
 2247              	.LASF52:
 2248 0071 75566F6C 		.ascii	"uVolts\000"
 2248      747300
 2249              	.LASF3:
 2250 0078 73686F72 		.ascii	"short unsigned int\000"
 2250      7420756E 
 2250      7369676E 
 2250      65642069 
 2250      6E7400
 2251              	.LASF2:
 2252 008b 73686F72 		.ascii	"short int\000"
ARM GAS  C:\Users\Shahed\AppData\Local\Temp\cc22cuHL.s 			page 56


 2252      7420696E 
 2252      7400
 2253              	.LASF44:
 2254 0095 4144435F 		.ascii	"ADC_SetOffset\000"
 2254      5365744F 
 2254      66667365 
 2254      7400
 2255              	.LASF38:
 2256 00a3 4144435F 		.ascii	"ADC_SetLowLimit\000"
 2256      5365744C 
 2256      6F774C69 
 2256      6D697400 
 2257              	.LASF29:
 2258 00b3 73746174 		.ascii	"status\000"
 2258      757300
 2259              	.LASF14:
 2260 00ba 666C6F61 		.ascii	"float32\000"
 2260      74333200 
 2261              	.LASF57:
 2262 00c2 4144435F 		.ascii	"ADC_offset\000"
 2262      6F666673 
 2262      657400
 2263              	.LASF22:
 2264 00cd 746D7052 		.ascii	"tmpRegVal\000"
 2264      65675661 
 2264      6C00
 2265              	.LASF46:
 2266 00d7 4144435F 		.ascii	"ADC_SetGain\000"
 2266      53657447 
 2266      61696E00 
 2267              	.LASF1:
 2268 00e3 756E7369 		.ascii	"unsigned char\000"
 2268      676E6564 
 2268      20636861 
 2268      7200
 2269              	.LASF40:
 2270 00f1 4144435F 		.ascii	"ADC_SetHighLimit\000"
 2270      53657448 
 2270      6967684C 
 2270      696D6974 
 2270      00
 2271              	.LASF12:
 2272 0102 696E7431 		.ascii	"int16\000"
 2272      3600
 2273              	.LASF5:
 2274 0108 6C6F6E67 		.ascii	"long unsigned int\000"
 2274      20756E73 
 2274      69676E65 
 2274      6420696E 
 2274      7400
 2275              	.LASF13:
 2276 011a 696E7433 		.ascii	"int32\000"
 2276      3200
 2277              	.LASF31:
 2278 0120 4144435F 		.ascii	"ADC_GetResult16\000"
 2278      47657452 
 2278      6573756C 
ARM GAS  C:\Users\Shahed\AppData\Local\Temp\cc22cuHL.s 			page 57


 2278      74313600 
 2279              	.LASF36:
 2280 0130 4144435F 		.ascii	"ADC_SetChanMask\000"
 2280      53657443 
 2280      68616E4D 
 2280      61736B00 
 2281              	.LASF43:
 2282 0140 4144435F 		.ascii	"ADC_SetSatMask\000"
 2282      53657453 
 2282      61744D61 
 2282      736B00
 2283              	.LASF30:
 2284 014f 4144435F 		.ascii	"ADC_IsEndConversion\000"
 2284      4973456E 
 2284      64436F6E 
 2284      76657273 
 2284      696F6E00 
 2285              	.LASF16:
 2286 0163 646F7562 		.ascii	"double\000"
 2286      6C6500
 2287              	.LASF39:
 2288 016a 6C6F774C 		.ascii	"lowLimit\000"
 2288      696D6974 
 2288      00
 2289              	.LASF47:
 2290 0173 61646347 		.ascii	"adcGain\000"
 2290      61696E00 
 2291              	.LASF10:
 2292 017b 75696E74 		.ascii	"uint16\000"
 2292      313600
 2293              	.LASF49:
 2294 0182 61646343 		.ascii	"adcCounts\000"
 2294      6F756E74 
 2294      7300
 2295              	.LASF11:
 2296 018c 75696E74 		.ascii	"uint32\000"
 2296      333200
 2297              	.LASF42:
 2298 0193 4144435F 		.ascii	"ADC_SetLimitMask\000"
 2298      5365744C 
 2298      696D6974 
 2298      4D61736B 
 2298      00
 2299              	.LASF8:
 2300 01a4 756E7369 		.ascii	"unsigned int\000"
 2300      676E6564 
 2300      20696E74 
 2300      00
 2301              	.LASF25:
 2302 01b1 4144435F 		.ascii	"ADC_Enable\000"
 2302      456E6162 
 2302      6C6500
 2303              	.LASF23:
 2304 01bc 636F756E 		.ascii	"counts\000"
 2304      747300
 2305              	.LASF7:
 2306 01c3 6C6F6E67 		.ascii	"long long unsigned int\000"
ARM GAS  C:\Users\Shahed\AppData\Local\Temp\cc22cuHL.s 			page 58


 2306      206C6F6E 
 2306      6720756E 
 2306      7369676E 
 2306      65642069 
 2307              	.LASF34:
 2308 01da 72657375 		.ascii	"result\000"
 2308      6C7400
 2309              	.LASF24:
 2310 01e1 4144435F 		.ascii	"ADC_Start\000"
 2310      53746172 
 2310      7400
 2311              	.LASF35:
 2312 01eb 4144435F 		.ascii	"ADC_Init\000"
 2312      496E6974 
 2312      00
 2313              	.LASF54:
 2314 01f4 766F6C74 		.ascii	"volts\000"
 2314      7300
 2315              	.LASF33:
 2316 01fa 6368616E 		.ascii	"chan\000"
 2316      00
 2317              	.LASF50:
 2318 01ff 6D566F6C 		.ascii	"mVolts\000"
 2318      747300
 2319              	.LASF20:
 2320 0206 73697A65 		.ascii	"sizetype\000"
 2320      74797065 
 2320      00
 2321              	.LASF51:
 2322 020f 4144435F 		.ascii	"ADC_CountsTo_uVolts\000"
 2322      436F756E 
 2322      7473546F 
 2322      5F75566F 
 2322      6C747300 
 2323              	.LASF53:
 2324 0223 4144435F 		.ascii	"ADC_CountsTo_Volts\000"
 2324      436F756E 
 2324      7473546F 
 2324      5F566F6C 
 2324      747300
 2325              	.LASF27:
 2326 0236 4144435F 		.ascii	"ADC_StartConvert\000"
 2326      53746172 
 2326      74436F6E 
 2326      76657274 
 2326      00
 2327              	.LASF37:
 2328 0247 6D61736B 		.ascii	"mask\000"
 2328      00
 2329              	.LASF21:
 2330 024c 63684E75 		.ascii	"chNum\000"
 2330      6D00
 2331              	.LASF32:
 2332 0252 7265744D 		.ascii	"retMode\000"
 2332      6F646500 
 2333              	.LASF28:
 2334 025a 4144435F 		.ascii	"ADC_StopConvert\000"
ARM GAS  C:\Users\Shahed\AppData\Local\Temp\cc22cuHL.s 			page 59


 2334      53746F70 
 2334      436F6E76 
 2334      65727400 
 2335              	.LASF9:
 2336 026a 75696E74 		.ascii	"uint8\000"
 2336      3800
 2337              	.LASF58:
 2338 0270 4144435F 		.ascii	"ADC_countsPer10Volt\000"
 2338      636F756E 
 2338      74735065 
 2338      72313056 
 2338      6F6C7400 
 2339              	.LASF4:
 2340 0284 6C6F6E67 		.ascii	"long int\000"
 2340      20696E74 
 2340      00
 2341              	.LASF18:
 2342 028d 63686172 		.ascii	"char\000"
 2342      00
 2343              	.LASF61:
 2344 0292 433A5C55 		.ascii	"C:\\Users\\Shahed\\Desktop\\Yobely- Health Thermome"
 2344      73657273 
 2344      5C536861 
 2344      6865645C 
 2344      4465736B 
 2345 02c1 7465722E 		.ascii	"ter.cywrk.Archive01\\AN91184\\Health Thermometer.cy"
 2345      63797772 
 2345      6B2E4172 
 2345      63686976 
 2345      6530315C 
 2346 02f2 64736E00 		.ascii	"dsn\000"
 2347              	.LASF0:
 2348 02f6 7369676E 		.ascii	"signed char\000"
 2348      65642063 
 2348      68617200 
 2349              	.LASF56:
 2350 0302 4144435F 		.ascii	"ADC_initVar\000"
 2350      696E6974 
 2350      56617200 
 2351              	.LASF59:
 2352 030e 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 2352      4320342E 
 2352      382E3420 
 2352      32303134 
 2352      30353236 
 2353 0341 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m0 -mthumb -g -O"
 2353      20726576 
 2353      6973696F 
 2353      6E203231 
 2353      31333538 
 2354 0374 30202D66 		.ascii	"0 -ffunction-sections\000"
 2354      66756E63 
 2354      74696F6E 
 2354      2D736563 
 2354      74696F6E 
 2355              	.LASF17:
 2356 038a 696E7436 		.ascii	"int64\000"
ARM GAS  C:\Users\Shahed\AppData\Local\Temp\cc22cuHL.s 			page 60


 2356      3400
 2357              	.LASF26:
 2358 0390 4144435F 		.ascii	"ADC_Stop\000"
 2358      53746F70 
 2358      00
 2359              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
